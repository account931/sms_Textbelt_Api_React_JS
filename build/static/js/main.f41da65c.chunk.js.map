{"version":3,"sources":["MyComponents/TextArea/functions_injected/scrollResults.js","images/loaddd.gif","logo.svg","images/loaddd_PREV.gif","images/error.gif","MyComponents/TextArea/functions_injected/sendSmsMessage.js","MyComponents/TextArea/child_components/DisplayPhoneRegExpMessage.js","MyComponents/TextArea/child_components/CountSmsText.js","MyComponents/TextArea/child_components/FlashMessage.js","MyComponents/TextArea/child_components/AjaxLoader.js","MyComponents/TextArea/child_components/ResultFromTextbeltApi.js","MyComponents/TextArea/TextArea.js","MyComponents/TextArea/functions_injected/Validate_RegExp.js","MyComponents/TextArea/functions_injected/Autocomplete.js","MyComponents/Error/ErrorLayout.js","MyComponents/LiftUpComponent/LiftedTo_Component.js","MyComponents/TechnicalInfoComponent/TechnicalInfo.js","MyComponents/TopSectionButtons/TopSectionButtons.js","MyComponents/TopSectionButtons/functions_injected/changeThemeInjected.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","scrollResults","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","divName","parent","$","animate","scrollTop","offset","top","stringX","eval","module","exports","p","runSomeActionsOnAjaxResult","that","fadeOut","setState","ifUserClickedSendSms","window","screen","width","prop","setTimeout","css","DisplayPhoneRegExpMessage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","status","phoneNumberErrorMessageX","Component","CountSmsText","smsText","FlashMessage","AjaxLoader","src","loaderX","alt","ResultFromTextbeltApi","_this$state","deliveryStatus","textIfTestModeOn","ifTestModeData2","defineProperty","checkSmsDeliveryStatus","bind","assertThisInitialized","show","ajaxURL","location","href","match","ajax","url","type","dataType","crossDomain","data","serverTextID","answer","textId","success","console","log","deliveredOK","error","alert","handleToUpdateIfDeliverClicked","myObjX","keys","map","key","index","showHideDivData","loaderX1","clientMessage","toString","errorFromApi","quotaRemaining","value","onClick","id","ifUserClickedCheckDeliveryData","TextAreaX","RegExp_Phone","RegExp_Phone_UA","limitLatin","limitCyrill","phoneNumberChild","smsTextChild","phoneNumberErrorMessage","isEnable","limitForSmstext","ifTestMode","ifTestModeData","answerFromTextbelt","ifUserClickedCheckDelivery","run_This_Component_Functions_In_Queue","getFormValue","handlePhoneNumberKeyPress","handleTextAreaKeyPress","resetFields","myValidate","thisX","regExp","butttonToDisable","messageErr","messageSuccess","e","html","AutocompleteFunction","swal","autocomplete","minLength","source","label","select","event","ui","item","preventDefault","displaySelectedCategoryLabel","_renderItem","ul","append","appendTo","ifCyrillicSmsCheck","handleTextAreaPaste","sendSmsMessage","myData","serverPhone","serverSms","serverIfTestStatus","liftTechAlertsInfoHandler","cellar","JSON","stringify","textBeltResponse","prevState","objectSpread","errorX","someArg","is","addClass","fadeIn","removeClass","val","trim","regExpp","_this2","inputPhone","target","messageError","messageOK","liftPhoneNumberHandler","_this3","length","clearQueue","substring","liftSmsTextHandler","_this4","pastedData","clipboardData","getData","child_components_DisplayPhoneRegExpMessage","placeholder","onChange","rows","cols","onPaste","child_components_CountSmsText","child_components_ResultFromTextbeltApi","child_components_AjaxLoader","child_components_FlashMessage","ErrorLayout","errorIMG","LiftedTo_Component","newV","passedtechInfoValue","i","passedPhoneNumberValue","passedSmsValue","passedIfTestModeValue","TechnicalInfo","data-toggle","role","aria-expanded","aria-controls","LiftUpComponent_LiftedTo_Component","smsTextData","phoneNumberData","techInfoDate","TopSectionButtons","wallPapperCount","testButtonText","runChangeThemeFunct","changeThemeInjected","wallURL","document","getElementsByClassName","style","backgroundImage","err","message","runChangeTestModeFunct","liftTestModeStatustHandler","App","phoneNumber","techInfo","baseState","somePhoneNumber","someSmsText","someTestModeBoolValue","someNewAlertValue","toConsumableArray","concat","name","logo","TextArea_TextArea","TechnicalInfoComponent_TechnicalInfo","Error_ErrorLayout","MyComponents_TopSectionButtons_TopSectionButtons","Boolean","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f41da65c.chunk.js","sourcesContent":["//USED in <TextArea/> as injected function \n\n//import React, { Component } from 'react';\nimport $ from 'jquery';\n//import swal from 'sweetalert';\n\n\n\n\n\n\n\n//Function to scroll\n// **************************************************************************************\n// **************************************************************************************\n// \n//                                                                                     ** \nexport function scrollResults (divName, parent)  //arg(DivID, levels to go up from DivID)\n\t{   //if 2nd arg is not provided while calling the function with one arg\n\t\tif (typeof(parent)==='undefined') {\n\t\t\n            $('html, body').animate({\n                scrollTop: $(divName).offset().top\n                //scrollTop: $('.your-class').offset().top\n             }, 'slow'); \n\t\t     // END Scroll the page to results\n\t\t} else {\n\t\t\t//if 2nd argument is provided\n\t\t\tvar stringX = \"$(divName)\" + parent + \"offset().top\";  //i.e constructs -> $(\"#divID\").parent().parent().offset().top\n\t\t\t$('html, body').animate({\n                scrollTop: eval(stringX)         //eval is must-have, crashes without it\n                }, 'slow'); \n\t\t}\n\t\n}","module.exports = __webpack_public_path__ + \"static/media/loaddd.9209e391.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/loaddd_PREV.584b607f.gif\";","module.exports = __webpack_public_path__ + \"static/media/error.52edd8e9.gif\";","//USED in <TextArea/> as injected function \n\n//import React, { Component } from 'react';\nimport $ from 'jquery';\n//import swal from 'sweetalert';\n\n\n\n\n\n\n\n//Function that sends Sms via ajax\n// **************************************************************************************\n// **************************************************************************************\n// \n//                                                                                     ** \nexport function sendSmsMessage (){\n\t\n\t//disable send button\n\t$(\"#sendButton\").prop( \"disabled\", true );\n\t\n\t\n\t//$(\".resultScroll\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(3000);\n\t\n\t//update this state in case in was set TRUE prev (to decide if to show Div with \"Delivered/NotDelivered\" Status). Value is used in <ResultFromTextbeltApi/>. Updated/uplifted from there too.\n\t this.setState({ifUserClickedCheckDelivery: false});\n\t \n\t $(\".child-div-sms\").css('opacity', '1'); //shows yellow opacity div-> react imitation of {$(\".del-st\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(3000);\n\t\n\t\n\t/*if(this.setState.ifUserClickedSendSms == true){\n\t    //set true to show Div with result in <ResultFromTextbeltApi/>\n\t    this.setState({ifUserClickedSendSms: false});\n\t\talert('changed');\n\t} else {\n\t\talert('not changed');\n\t}*/\n\t\t\n\t /*const headers = {\n        //'Content-Type' : 'application/x-www-form-urlencoded',\n\t\t'Content-Type':  'application/json',\n\t\t//'Accept': 'application/json'\n       }; */\n\t   \n\t   //axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n\t   \n\t   /*\n       axios.post('http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php',\n\t   {\n\t\t   serverPhone: this.state.phoneNumberChild, serverSms: this.state.smsTextChild \n\t   },\n\t    {headers} )\n       .then(res => {\n\t\t   //const posts = res.data.data.children.map(obj => obj.data);\n           //this.setState({ posts });\n          return res;\n       });\n\t   */\n\t   \n\t   \n\t   /*\n\t   axios({ \n\t       method: 'GET', url:'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php', \n\t\t   crossDomain: true, \n\t\t   data: { serverPhone: this.state.phoneNumberChild, serverSms: this.state.smsTextChild }, \n\t\t    headers: headers\n\t\t   }) \n\t       .then(res => {\n\t\t     //const posts = res.data.data.children.map(obj => obj.data);\n             //this.setState({ posts });\n\t\t\t console.log(res);\n            return res;\n       })\n\t   .catch((error) => { console.log(error)});\n\t   \n\t   \n\t   */\n\t   \n\t   \n\t   \n\t   //data to send via ajax\n\t   var myData = { \n\t      serverPhone: this.state.phoneNumberChild,     //number\n\t\t  serverSms: this.state.smsTextChild,           //sms text\n\t\t  serverIfTestStatus: this.props.ifTestModeData //test/prod flag (set in <TopSectionButtons/>, uplifted to <App/> and passed here)\n\t   };\n\t   \n\t   \n\t   /*\n\t    //------ Variant_1 (ajax without contentType/dataType) => Works!!!! (but with text only-> can not parse json )\n\t   \n\t      $.ajax({\n            url: 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php', //url: '../Server_Side/ajax_script/sendSms.php',//my ajax url //'https://textbelt.com/quota/textbelt',\n            type: 'POST',\n\t\t\t//contentType: \"text/plain\",\n\t\t\t//dataType: 'text/html', //'JSON', 'text/html' // without this it returned string(that can be alerted), now it returns object\n\t\n\t\t\tcrossDomain: true,\n\t\t\t//headers: {  'Access-Control-Allow-Origin': 'http://The web site allowed to access' }, \n\t\t\t//headers: { 'Content-Type': 'application/json' },\n\t\t\t//passing some data.....\n            data: myData,\n            success: function(data) {\n               \n\t\t\t  alert(\"OK -> Variant_1\");\n\t\t\t  alert(data);\n\t\t\t  alert(\"Variant_1 can work with plain text only, so it cant get JSON by keys\");\n\t\t\t  alert(\"Variant_1 \" + data.status);\n            },  //end success\n\t\t\terror: function (error) {\n\t\t\t\talert(\"Variant_1 failed\");\n            }\t\n        });\n\t\t\n\t   */\n\t   \n\t   \n\t      //===========================================\n\t      //------ Variant_2 (ajax withcontentType/dataType) => Works!!!! (The most correct)!!!!!!!!!!!!!!!!\n\n\t      $(\".ajax-loader\").show(); //show loader\n\t\t  \n\t\t  //decide which url to use, switching ajax url when running on localHost or real Hosting\n\t\t  var localhostURL      = 'http://localhost/Sms_React_FIX/sms_Textbelt_Api_React_JS-OLD/Server_Side/ajax_script/sendSms.php';\n          //var localhostURL    = 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php';\n\t\t  var realServerProdURL = '../Server_Side/ajax_script/sendSms.php'; //can't use this on LocalHost as it'll redirect to http://localhost:3000/Server_Side/ajax_script/sendSms.php\n\t\t  var ajaxURL = '';\n\t\t  \n\t\t  //if finds \"localhost\" in current url\n\t\t  if(window.location.href.match(/localhost/)){  \n\t\t\t  ajaxURL = localhostURL; \n\t\t  } else {\n\t\t\t  ajaxURL = realServerProdURL;\n\t\t  }\n\t\t  \n\t\t  \n\t      $.ajax({ //use {http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php'} to test on localhost, use {../Server_Side/ajax_script/sendSms.php} on real hosting\n            url: ajaxURL, //'../Server_Side/ajax_script/sendSms.php', //url: 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php', //url: '../Server_Side/ajax_script/sendSms.php', //url: 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php',//url: 'http://dimmm931.000webhostapp.com/sms_react_js/Server_Side/ajax_script/sendSms.php',//\n            type: 'POST',\n\t\t\t//contentType: \"application/json\",\n\t\t\tdataType: 'JSON', //'JSON', 'text/html' // without this it returned string(that can be alerted), now it returns object\n\t\n\t\t\tcrossDomain: true,\n\t\t\t//headers: {  'Access-Control-Allow-Origin': 'http://The web site allowed to access' }, \n\t\t\t//headers: { 'Content-Type': 'application/json' }, //NO HEADERS -> it will crash\n\t\t\t//passing some data.....\n            data: myData,\n\t\t\t/*{ \n\t\t\t    serverPhone: this.state.phoneNumberChild, \n\t\t\t\tserverSms: this.state.smsTextChild, \n\t\t\t\tserverIfTestStatus: this.props.ifTestModeData //testMode Status is uplifted from <TopSectionButtons/> to <App/> and passed there to <TerxAreaX/> as this.props.ifTestModeData\n\t\t\t},*/\n            success: function(data) {\n               \n\t\t\t  console.log(data);\n\t\t\t  \n\t\t\t  //alert(\"OK -> Variant_2\\n\" +  \"Variant_2 \" + data.cellar + \"\\n\" +  JSON.stringify(data)); //reassinged to liftTechAlertsInfoHandler\n\t\t\t  //uplift to TechInfo/use it instead of alert\n\t\t\t  this.props.liftTechAlertsInfoHandler(\"OK -> Variant_2\\n\" +  \"Variant_2 \" + data.cellar + \"\\n\" +  JSON.stringify(data));\n\t\t\t  \n\t\t\t  if(data.textBeltResponse){ //textBeltResponse array is set in Classes/SendSms.php\n\t\t\t      \n\t\t\t\t   //this.setState({answerFromTextbelt : data.textBeltResponse.success});\n\t\t\t\t   \n\t\t\t\t  //update this.state.answerFromTextbelt (Variant for array)\n\t\t\t\t /* this.setState(prevState => ({\n                      answerFromTextbelt: [prevState.array, data.textBeltResponse.success, data.textBeltResponse.textId, data.textBeltResponse.quotaRemaining]\n                  })); */\n\t\t\t\t  \n\t\t\t\t  //alert(\"textBeltResponse \" + data.textBeltResponse.success); //reassinged to liftTechAlertsInfoHandler\n\t\t\t\t  //uplift to TechInfo/use it instead of alert\n\t\t\t      this.props.liftTechAlertsInfoHandler(\"textBeltResponse \" + data.textBeltResponse.success);\n\t\t\t  \n\t\t\t\t  if(data.textBeltResponse.success === true){ //if sent\n\t\t\t\t      //update this.state.answerFromTextbelt (Variant for Object)\n\t\t\t\t      this.setState(prevState => ({\n                          answerFromTextbelt: {    // object that we want to update\n                              ...prevState.answerFromTextbelt,    // keep all other key-value pairs\n                              success: data.textBeltResponse.success, textId:data.textBeltResponse.textId,  // update the Object with key:value\n\t\t\t\t\t\t      quotaRemaining:data.textBeltResponse.quotaRemaining, clientMessage:'Sms sent successfully',\n                              errorFromApi: data.textBeltResponse.errorX\t\t\t\t\t\t\n                          }\n                      }));\n\t\t\t\t\t  \n\t\t\t\t\t\n\t\n\t\t\t\t  } else {\n\t\t\t\t\t  //update this.state.answerFromTextbelt (Variant for Object)\n\t\t\t\t      this.setState(prevState => ({\n                          answerFromTextbelt: {    // object that we want to update\n                              ...prevState.answerFromTextbelt,    // keep all other key-value pairs\n                              success: data.textBeltResponse.success, textId:'',  // update the Object with key:value\n\t\t\t\t\t\t      quotaRemaining:'', clientMessage:'Sms  not sent successfully',\n                              errorFromApi: data.textBeltResponse.error\t\t\t\t\t\t\n                          }\n                      }));\n\t\t\t\t\t  \n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t     \n\t\t\t  } else { //if NO data.textBeltResponse, i.e no response from TextBelt Api\n\t\t\t\t  /*this.setState(prevState => ({\n                      answerFromTextbelt: [prevState.array, data.errorX]\n                  })); */\n\t\t\t\t  //this.setState({answerFromTextbelt : data.errorX});\n\t\t\t\t  \n\t\t\t\t   //update this.state.answerFromTextbelt (Variant for Object)\n\t\t\t\t  this.setState(prevState => ({\n                      answerFromTextbelt: {    // object that we want to update\n                        ...prevState.answerFromTextbelt,    // keep all other key-value pairs\n                        success: false, textId:'', quotaRemaining:'', // update the Object with key:value\n\t\t\t\t\t\tclientMessage:'Sms message was not send', errorFromApi: data.errorX  \n                     }\n                  }));\n\t\t\t  }\n\t\t\t\n\t\t\t  runSomeActionsOnAjaxResult(this);\n\t\t\t \n             }.bind(this),  //end success //{.bind(this)} is a must otherwise setState won't work in success\n\t\t\t error: function (error) {\n\t\t\t\talert(\"Variant_2 failed\");\n\t\t\t\t//uplift to TechInfo/use it instead of alert\n\t\t\t     this.props.liftTechAlertsInfoHandler(\"Variant_2 failed\");\n\t\t\t\t  \n\t\t\t\t$(\".ajax-loader\").fadeOut(5000); //hide loader\n\t\t\t\t\n\t\t\t\t//update this.state.answerFromTextbelt (Variant for Object)\n\t\t\t\tthis.setState(prevState => ({\n                    answerFromTextbelt: {    // object that we want to update\n                        ...prevState.answerFromTextbelt,    // keep all other key-value pairs\n                        success: false, textId:'', quotaRemaining:'', clientMessage:'Sms message crashed'  // update the Object with key:value\n                    }\n                }));\n\t\t\t\t\n\t\t\t    runSomeActionsOnAjaxResult(this);\n\t\t\t \n            }.bind(this) //{.bind(this)} is a must otherwise setState won't work in success\t\n        });\n\t\t\n\t\t\n\t\t\n\t\t\n\t   /*\n\t   //------ Variant_3  JSONP1 => DOES NOT WORK!!!!\n\t   $.ajax({\n            url: 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php',//my ajax url //'https://textbelt.com/quota/textbelt',\n            type: 'POST',\n\t\t\t//contentType: \"application/json; charset=utf-8\",\n\t\t\tdataType: 'JSONP', //'JSON', 'text/html' // without this it returned string(that can be alerted), now it returns object\n\t\t\tjsonpCallback: 'photos',\n            jsonp: 'photos',\n\t\t\tcrossDomain: true,\n\t\t\t//headers: {  'Access-Control-Allow-Origin': 'http://The web site allowed to access' }, \n\t\t\t//headers: { 'Content-Type': 'application/json' },\n\t\t\t//passing some data.....\n            data: myData,\n            success: function(data) {\n               \n\t\t\t    alert(\"OK Variant_3 JSONP1 \");\n\t\t\t\talert(JSON.stringify(data));\n            },  //end success\n\t\t\terror: function (error) {\n\t\t\t\talert(\"Variant_3 JSONP1 failed\");\n            }\t\n        });\n\t\t*/\n\t\t\n\t\t\n\t\t/*\n\t\t//---------Variant_4 JSONP2  => DOES NOT WORK!!!!\n\t\t$.getJSON(\"http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php?jsoncallback=?\",\n        {\n            format: \"json\"\n        },\n       //RETURNED RESPONSE DATA IS LOOPED AND ONLY IMAGE IS APPENDED TO IMAGE DIV\n       function(data) {\n       //$.each(data.items, function(i,item){\n\t\t  alert(\"OK Variant_4 JSONP2 \");\n\t\t  alert(data);\n       //$(\"<img/>\").attr(\"src\", item.media.m).appendTo(\"#images\");\n       //});\n\t   });\n\t\t//-----------------\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tfunction photos (data) {\n          alert('photo is OK Variant_3 JSONP1 ');\n          console.log(data);\n       }\n\t   */\n\t   \n\t   \n\n\t\n}\n\n\n\n\n\n //run some action both on ajax success/fail\n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n   function runSomeActionsOnAjaxResult(that){\n\t   $(\".ajax-loader\").fadeOut(5000); //hide loader\n\t\t\t  \n\t   //set true to show Div with result in <ResultFromTextbeltApi/>\n\t   that.setState({ifUserClickedSendSms: true});\n\t\t\t \n\t   //Scroll to results in Mobile only\n\t   if(window.screen.width <= 640){ \n\t       that.scrollResults(\".resultScroll\"); //scroll the page down to weather results\n\t    }\n\t\t\t \n\t   //enable send button\n\t   $(\"#sendButton\").prop( \"disabled\", false );\n\t\t\t \n\t   //shows yellow opacity div-> react imitation of {$(\".del-st\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(3000);\n\t   setTimeout(function() {\n\t       $(\".child-div-sms\").css('opacity', '0'); //hides yellow opacity div -> react imitation of {$(\".del-st\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(3000);\n\t   }, 3000);\n   }\n   \n   ","import React, { Component } from 'react';\n//import '../../css/Technical_Info.css';\n//import LiftedTo_Component from '../LiftUpComponent/LiftedTo_Component';\n//import error from '../../images/error.gif';\n/*\nimport State_Array_List_Builder from '../Build_List_from_State_Array/State_Array_List_Builder';  //Component creates List from State Array\nimport LiftedFrom_Component from '../LiftUpComponent/LiftedFrom_Component';\n*/\n//import $ from 'jquery';\n\n\n//Message if RegExp founds cell number OK/or NOT*/}\n\nclass DisplayPhoneRegExpMessage extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n\t\t\n    };\n \n   \n  }\n  \n\n \n  \n  \n  \n  \n  //RENDER ------------------------------------------------\n  render() {\n\t\n\t  \n      return (\n\t\t<div className=\"col-sm-12 col-xs-12 err-message-div shadow-xx\"> \t \n\n              <span className={this.props.status ? 'err-mess-wrong phone-error' : 'err-mess-ok phone-error'} > {this.props.phoneNumberErrorMessageX} </span>  {/* Message if RegExp founds cell number OK/or NOT*/}\n\n\t\t</div>\n\t  \n    );\n  }\n}\n\nexport default DisplayPhoneRegExpMessage;\n","import React, { Component } from 'react';\n//import '../../css/Technical_Info.css';\n//import LiftedTo_Component from '../LiftUpComponent/LiftedTo_Component';\n//import error from '../../images/error.gif';\n/*\nimport State_Array_List_Builder from '../Build_List_from_State_Array/State_Array_List_Builder';  //Component creates List from State Array\nimport LiftedFrom_Component from '../LiftUpComponent/LiftedFrom_Component';\n*/\n//import $ from 'jquery';\n\n\n\nclass CountSmsText extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n\t\t\n    };\n \n   \n  }\n  \n\n \n  \n  \n  \n  \n  //RENDER ------------------------------------------------\n  render() {\n\t\n\t  \n      return (\n\t\t<div className=\"col-sm-12 col-xs-12\"> \t \n          <div className=\"\">\n\t\t  {/* Count: {160 - (this.props.smsText.length)}*/}\n\t\t  <span className=\"text-shadow\"> Count: {this.props.smsText}</span>\n          </div>\n\t\t</div>\n\t  \n    );\n  }\n}\n\nexport default CountSmsText;\n","import React, { Component } from 'react';\nimport '../../../css/FlashMessage.css';\n//import LiftedTo_Component from '../LiftUpComponent/LiftedTo_Component';\n//import error from '../../images/error.gif';\n//import $ from 'jquery';\n\n\n\nclass FlashMessage extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n\t\t\n    };\n \n   \n  }\n  \n\n \n  \n  \n  \n  \n  //RENDER ------------------------------------------------\n  render() {\n\t\n\t  \n      return (\n\t\t<div className=\"col-sm-12 col-xs-12 flash-message\"> \t \n\n\t\t  Left <br/> 0 chars\n\n\t\t</div>\n\t  \n    );\n  }\n}\n\nexport default FlashMessage;\n","//Shows gif spinner loader, when user clicks \"Send sms\"\nimport React, { Component } from 'react';\nimport loaderX from '../../../images/loaddd.gif'\n//import '../../css/Technical_Info.css';\n//import LiftedTo_Component from '../LiftUpComponent/LiftedTo_Component';\n//import error from '../../images/error.gif';\n/*\nimport State_Array_List_Builder from '../Build_List_from_State_Array/State_Array_List_Builder';  //Component creates List from State Array\nimport LiftedFrom_Component from '../LiftUpComponent/LiftedFrom_Component';\n*/\n//import $ from 'jquery';\n\n\n\nclass AjaxLoader extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n\t\t\n    };\n \n   \n  }\n  \n\n \n  \n  \n  \n  \n  //RENDER ------------------------------------------------\n  render() {\n\t\n\t  \n      return (\n\t\t \n        <div className='ajax-loader col-sm-12 col-xs-12'> \n\t\t    <img src={loaderX}  className=\"error-img\" alt=\"logo\" />  {/*  hidden by default */}\n\t\t</div>\n\n\t  \n    );\n  }\n}\n\nexport default AjaxLoader;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport {scrollResults} from '../functions_injected/scrollResults'; //import my function to scroll\nimport loaderX from '../../../images/loaddd.gif'\nimport loaderX1 from '../../../images/loaddd_PREV.gif'\n\n//import '../../css/Technical_Info.css';\n//import LiftedTo_Component from '../LiftUpComponent/LiftedTo_Component';\n//import error from '../../images/error.gif';\n/*\nimport State_Array_List_Builder from '../Build_List_from_State_Array/State_Array_List_Builder';  //Component creates List from State Array\nimport LiftedFrom_Component from '../LiftUpComponent/LiftedFrom_Component';\n*/\n//import $ from 'jquery';\n\n\n\nclass ResultFromTextbeltApi extends Component {\n\tconstructor(props) {\n      super(props);\n      this.state = {\n\t     deliveryStatus:'here will be status',\n\t\t textIfTestModeOn: this.props.ifTestModeData2, // ? 'Test mode ON' : ' Test OFF, it\"s Prod',  //just for test, to show if it is TEST or Prod\n\t\t deliveryStatus: 'some status',\n\t\t //ifUserClickedCheckDelivery: this.props.ifUserClickedCheckDeliveryData, //false by default, //to detect if used clicked \"Check Delivery\" (to decide if to show Div with \"Delivered/NotDelivered\" Status). Value is used in <ResultFromTextbeltApi/>\n\t\t deliveredOK: false, //deivery status for CSS styling (red or green bg)\n      };\n\t  \n\t // This binding is necessary to make `this` work in the callback\n\t this.checkSmsDeliveryStatus = this.checkSmsDeliveryStatus.bind(this); //runs checkong delivery\n\t this.runSomeActionsOnAjaxResult = this.runSomeActionsOnAjaxResult.bind(this); //runs checkong delivery\n     this.scrollResults = scrollResults.bind(this); //for injected from files function\n  }\n  \n  \n  \n  \n   //function to run ajax to check delivery status\n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n   checkSmsDeliveryStatus(){\n       \n\t   //alert(this.props.ifUserClickedCheckDeliveryData);\n\t   \n\t   //set false to hide Div with Delivery result in <ResultFromTextbeltApi/> (if was shown prev)\n\t\t//this.setState({ifUserClickedCheckDelivery: false});\n\t\t\t \n\t   \n\t   $(\".child-div\").css('opacity', '1'); //shows yellow overlay div-> react imitation of animation, analogue of {$(\".del-st\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(3000);\n\t   \n\t   \n\t\n\t   //------ Variant_2 (ajax withcontentType/dataType) => Works!!!! (The most correct)!!!!!!!!!!!!!!!!\n\t      $(\".ajax-loader\").show(); //show gif loader\n\t\t  \n\t\t  //decide which url to use, switching ajax url when running on localHost or real Hosting\n\t\t  var localhostURL = 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/getSmsDeliveryStatus.php';\n\t\t  var realServerProdURL = '../Server_Side/ajax_script/getSmsDeliveryStatus.php'; //can't use this on LocalHost as it'll redirect to http://localhost:3000/Server_Side/ajax_script/sendSms.php\n\t\t  var ajaxURL = '';\n\t\t  \n\t\t  //if finds \"localhost\" in current url\n\t\t  if(window.location.href.match(/localhost/)){  \n\t\t\t  ajaxURL = localhostURL; \n\t\t  } else {\n\t\t\t  ajaxURL = realServerProdURL;\n\t\t  }\n\t\t  \n\t\t  \n\t      $.ajax({ //use {http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/getSmsDeliveryStatus.php'} to test on localhost, use {../Server_Side/ajax_script/getSmsDeliveryStatus.php} on real hosting\n            url: ajaxURL, //'../Server_Side/ajax_script/getSmsDeliveryStatus.php', //url: 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/getSmsDeliveryStatus.php', //url: '../Server_Side/ajax_script/getSmsDeliveryStatus.php', //url: 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/getSmsDeliveryStatus.php',//url: 'http://dimmm931.000webhostapp.com/sms_react_js/Server_Side/ajax_script/sendSms.php',//\n            type: 'GET',\n\t\t\t//contentType: \"application/json\",\n\t\t\tdataType: 'JSON', //'JSON', 'text/html' // without this it returned string(that can be alerted), now it returns object\n\t\t\tcrossDomain: true,\n\t\t\t//headers: {  'Access-Control-Allow-Origin': 'http://The web site allowed to access' }, \n\t\t\t//headers: { 'Content-Type': 'application/json' }, //NO HEADERS -> it will crash\n\t\t\t//passing some data.....\n            data: \n\t\t\t{ \n\t\t\t    serverTextID: this.props.answer.textId \n\t\t\t},\n            success: function(data) {\n               //$(\".del-st\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(2000);\n\t\t\t  //alert(\"check delivery OK\");\n\t\t\t  //alert(JSON.stringify(data));\n\t\t\t  console.log(data);\n\t\t\t  \n\t\t\t  if(data.status){ //textBeltResponse array is set in Classes/SendSms.php\n\t\t\t\t  \n\t\t\t\t  //alert(\"textBeltResponse \" + data.status);\n\t\t\t\t  \n\t\t\t\t  //update this.state.deliveryStatus -> gets the relivery response status from Api\n\t\t\t\t  this.setState({deliveryStatus : data.status}); \n\t\t\t\t  \n\t\t\t\t  if(data.status == 'DELIVERED'){\n\t\t\t\t      this.setState({deliveredOK : true});  //for CSS styling \n\t\t\t\t  } else {\n\t\t\t\t\t  this.setState({deliveredOK : false});  //for CSS styling \n\t\t\t\t  }\n\t\t\t     \n\t\t\t  } else { //if NO data.textBeltResponse, i.e no response from TextBelt Api\n\t\t\t\t  //update this.state.deliveryStatus\n\t\t\t\t  this.setState({deliveryStatus : 'error happened, may be a test message???'});\t   \n\t\t\t\t \n\t\t\t  }\n\t\t\t \n\t\t\t this.runSomeActionsOnAjaxResult();\n\t\t\t \n             }.bind(this),  //end success //{.bind(this)} is a must otherwise setState won't work in success\n\t\t\t error: function (error) {\n\t\t\t\talert(\"Check Delivery  failed\");\n\t\t\t\t\n\t\t\t\t//update this.state.deliveryStatus\n\t\t\t\tthis.setState({deliveryStatus : 'Check delivery error'});\n\t\t\t\t\n\t\t\t\tthis.runSomeActionsOnAjaxResult();\n\t\t\t \n            }.bind(this) //{.bind(this)} is a must otherwise setState won't work in success\t\n        });\n\t\t\n\n\t\t\n\t   //\n\t  \n   }\n  \n  //run some action both on ajax success/fail\n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n   runSomeActionsOnAjaxResult(){\n       $(\".ajax-loader\").fadeOut(3000); //hide loader\n\t\t\t  \n\t   //update/uplift {this.state.ifUserClickedCheckDelivery} in <TextArea/>, which is passed here as {this.props.ifUserClickedCheckDeliveryData} \n\t    this.props.handleToUpdateIfDeliverClicked(true);\n\t\t\t \n\t   //Scroll to results in Mobile only\n\t   //if(window.screen.width <= 640){ \n\t       this.scrollResults(\".btn-scroll\"); //scroll the page down to .btn-scroll\n\t   //}\n\t\t\t \n\t   setTimeout(function() {\n\t       $(\".child-div\").css('opacity', '0'); //hides yellow overlay div -> react imitation of animation, analogue of{$(\".del-st\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(3000);\n\t   }, 3000);\n\t   \n   }\n  \n  \n  \n  \n  //RENDER ------------------------------------------------\n  render() {\n\t\n\t//iterate over state Array[], if  typeof(state) == ARRAY\n\t/* const itteratedArray = this.props.answer.map(function(item, i){\n\t   return <li key={i}>{item}</li>\n    }); */\n\t\n   //iterate over state Object{}, if  typeof(state) == OBJECT\n   var myObjX = this.props.answer;   \n   const itteratedArray = Object.keys(myObjX).map(function(key, index) {\n      return <span key={index}> #{key} => {myObjX[key]/*.toString()*/} &nbsp;&nbsp; </span> //index is i++;  key is Object key name;  myObjX[key] is the value of key //toString() is do display Boolean true/false\n     //return <li key={index}> {key} => {myObjX[key].toString()}  </li>\n   });\n\n\t \n      return (\n\t  <div className='col-sm-12 col-xs-12 resultScroll'>\n\t    \n\t\t<div className='col-sm-3 col-xs-0'></div>  {/*  just to center */}\n\t \n\t \n\t    <div className={'col-sm-6 col-xs-12' + (this.props.showHideDivData ? ' show-div': ' hide-div')}>\n\t   \n\t       {/* Shows this.state.answerFromTextbelt (type Object*) from Textarea.js. Most technical info */}\n\t\t   {/* <div className={'col-sm-12 col-xs-12 textbelt-answer font-small' + (this.props.answer.success? ' sms-sent': ' sms-not-sent')}> */} {/* if this.state.answerFromTextbelt.success is set as TRUE in Textarea.js, set css class 'sns-sent' */}\n\t\t      {/*this.props.answer */} \n\t\t      {/*{itteratedArray}*/} {/* Shows => success => true textId => 888888888 quotaRemaining => 1 */} \n\t\t   {/* </div> */}\n\t\t  \n\t\t  \n\t\t  \n\t\t  \n\t\t   {/* Message for client, My custom message: Message Sent/was not sent */}\n\t\t    <div className={'col-sm-12 col-xs-12  parent-div-sms'}>\n\t\t  \n\t\t         <div className=\"col-sm-12 col-xs-12 textbelt-answer child-div-sms\">{/* overlay loader, hidden by default */}\n                      <p>This should be over the parent</p>\n\t\t\t\t      <img src={loaderX1}  className=\"delivery-loader-sms\" alt=\"logo\" />  \n                 </div>\n\t\t\t\n\t\t        {/* Message for client, My custom message: Sent/was not sent */}\n\t\t        <div className={'col-sm-12 col-xs-12 textbelt-answer' + (this.props.answer.success? ' sms-sent': ' sms-not-sent')}> {/* if this.state.answerFromTextbelt.success is set as TRUE in Textarea.js, set css class 'sns-sent' */}\n\t\t           <p>{this.props.answer.clientMessage}</p>{/* Shows=> My custom: Sent/was not sent*/} \n\t\t\t       <p> Api Success: {this.props.answer.success.toString()}</p> {/* True/false status from TextBelt */} \n\t\t\t       <p> Api error: {this.props.answer.errorFromApi}</p>  {/* error status from Classes/SendSms.php, value from($errorX)*/} \n\t\t\t\t   <p> Left: {this.props.answer.quotaRemaining} quota</p> \n\t\t\t       <p> if Test Sms: {this.props.ifTestModeData2.toString()} </p>\n\t\t        </div> \n\t\t\t\t\n\t\t\t</div> {/* parent-div-sms */}\n\t\t    \n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t    {/* If sms is sent, show button \"check delivery\" */}\n\t\t    <div className={'col-sm-12 col-xs-12 btn-scroll' + (this.props.answer.success? ' show-delivery-button': ' hide-delivery-button')}>\n\t\t       <input type=\"button\" className=\"btn btn-success btn-md el\" value=\"Check Delivery\"  onClick={this.checkSmsDeliveryStatus}/>\n\t\t    </div>\n\t\t   \n\t\t   \n\t\t   {/* Div to show sms delivery status */}\n\t\t    <div id=\"delivText\" className={'col-sm-12 col-xs-12 textbelt-answer del-st parent-div' + ((this.props.answer.success && this.props.ifUserClickedCheckDeliveryData)? ' show-div': ' hide-div') + (this.state.deliveredOK? ' deliv-ok': ' deliv-fail')}>\n\t\t\t   \n\t\t\t   <div className=\"child-div\">{/* overlay loader, hidden by default */}\n                   <p>This should be over the parent</p>\n\t\t\t\t   <img src={loaderX}  className=\"delivery-loader\" alt=\"logo\" />  \n               </div>\n\t\t\t   \n\t\t\t   {/* Show delivery text*/}\n\t\t\t   <p><i className=\"fa fa-envelope-o fa-2x\" ></i></p>\n\t\t\t   <p>{this.state.deliveryStatus}</p>\n\t\t    </div>\n\t\t   \n\t\t\n\t\t</div>\n\t\t\n    </div>\n\t  \n    );\n  }\n}\n\nexport default ResultFromTextbeltApi;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport '../../css/TextArea.css';\nimport {myValidate} from './functions_injected/Validate_RegExp'; //import function\n\nimport 'jquery-ui';\nimport 'jquery-ui/themes/base/autocomplete.css';  //according to folder structure in node_modules\n\nimport {AutocompleteFunction} from './functions_injected/Autocomplete'; //import my function\nimport {sendSmsMessage} from './functions_injected/sendSmsMessage'; //import my function to send sms\nimport {scrollResults} from './functions_injected/scrollResults'; //import my function to scroll\n\n\nimport DisplayPhoneRegExpMessage from './child_components/DisplayPhoneRegExpMessage';\nimport CountSmsText from './child_components/CountSmsText';\nimport FlashMessage from './child_components/FlashMessage';\nimport AjaxLoader from './child_components/AjaxLoader';\nimport ResultFromTextbeltApi from './child_components/ResultFromTextbeltApi';\n\n\n\n\n\n/*import error from '../../images/error.gif';\nimport CopyLayout from '../Copy/CopyLayout';\n*/\n\n\n\nclass TextAreaX extends Component {\n\tconstructor(props) {\n    super(props);\n\t\n\tthis.RegExp_Phone = /^[+][\\d]{8,9}[0-9]+$/; //phone number regExp for world wide\n\tthis.RegExp_Phone_UA = /^[+]380[\\d]{2}[0-9]{7}$/; //phone number regExp for Ukraine //must have strict +380 & 9 digits ///^[+]380[\\d]{1,4}[0-9]+$/;\n\n\tthis.limitLatin = 120; //limit for chars in sms\n\tthis.limitCyrill = 70; //limit for Ru chars in sms\n\t\n\t\n    this.state = {\n\t\tphoneNumberChild : \"+380\",\n\t\tsmsTextChild : \"\", //I am set manually in state in child <Textarea/>\n\t\tphoneNumberErrorMessage : \"phone number message\",\n\t\tisEnable: false, //true/false state to deisable/enable submit button  (tempo disabled)\n\t\tlimitForSmstext : this.limitLatin, //limit for chats in sms text, set by ifCyrillicSmsCheck(), by default limit is 120\n\t\t//testMode Status is uplifted from <TopSectionButtons/> to <App/> and passed there to <TerxAreaX/> as this.props.ifTestModeData\n\t\t//testMode : true,  //true by default, updated/uplifted from <TopSectionButtons/> //used to switch between test/prod mode, when in test mode, Api uses on server side TextBelt test key {\"textbelt_test\"}\n\t\tifTestMode: this.props.ifTestModeData,  //test/prod flag (set in <TopSectionButtons/>, uplifted to <App/> and passed here)\n\t\tanswerFromTextbelt : {success:false, textId:'', quotaRemaining: '', clientMessage:'', errorFromApi: ''},\n\t\tifUserClickedSendSms : false, //to detect if used clicked sendind sms (to decide if to show Div with \"Message sent/not sent\")\n\t\tifUserClickedCheckDelivery: false, //to detect if used clicked button \"Check delivery status\" (to decide if to show Div with \"Delivered/Not Delivered\" Status). used in <ResultFromTextbeltApi/>. Updated/uplifted from there too.\n\t\t//addressArray: [],  //this state will hold array with separ addresses from textarea input\n\t   \n    };\n \n    // This binding is necessary to make `this` work in the callback\n\tthis.run_This_Component_Functions_In_Queue = this.run_This_Component_Functions_In_Queue.bind(this); //runs all functions together\n\tthis.getFormValue = this.getFormValue.bind(this);\n\tthis.handlePhoneNumberKeyPress = this.handlePhoneNumberKeyPress.bind(this); //sends this.state.phoneNumberChild to parent <App/> to set it in parent's state {state.phoneNumber}\n\tthis.handleTextAreaKeyPress = this.handleTextAreaKeyPress.bind(this); //sends this.state.smsTextChild to parent <App/> to set it in parent's state {state.smsText}\n    this.resetFields = this.resetFields.bind(this);\n\tthis.myValidate = myValidate.bind(this); //for injected from files function, for non-injected function use {this.myValidate.bind(this);}\n\tthis.AutocompleteFunction = AutocompleteFunction.bind(this); //for binding this class/file functions\n\tthis.ifCyrillicSmsCheck = this.ifCyrillicSmsCheck.bind(this);\n\tthis.handleTextAreaPaste = this.handleTextAreaPaste.bind(this);\n\tthis.sendSmsMessage = sendSmsMessage.bind(this); //for injected from files function\n    this.scrollResults = scrollResults.bind(this); //for injected from files function\n\n\t\n\t\n\t\n\t\n\t/*this.runAjax = this.runAjax.bind(this);\n\tthis.drawResult = this.drawResult.bind(this);\n\tthis.htmlAnyResult = this.htmlAnyResult.bind(this);\n\t*/\n\t//this.liftFinalCoordsHandler = this.liftFinalCoordsHandler.bind(this);\n  }\n  \n   componentDidMount(){\n\t   //JQ UI autocomplete from injected function. Crashed in componentWillMount!!!!!\n\t   this.AutocompleteFunction();\n   }\n   \n   componentWillMount(){\n\n   }\n   \n   \n    //uplifting\n    handleToUpdateIfDeliverClicked(someArg){\n\t\tthis.setState({ifUserClickedCheckDelivery:someArg});\n\t}\n\t\n   \n   //just runs all functions together on submit button click\n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n  run_This_Component_Functions_In_Queue() {\n\t  //var promises = [];  //array that will hold all promises\n\t  //var temp = [];     // temp array to store found coordinates before assigning it to this.state.coordinateArray\n\t  \n\t  //Does not work\n\t  if ($(\"#sendButton\").is(\":disabled\"))  //($(\"#sendButton\").attr('submit-button', 'disabled') == 'true') ////if ($(this).find('button.disabled').length > 0) {\n      {\n        swal(\"Stop!\", \"Button disabled, incorrect phone number\");\n      }\n\t  \n\t \n\t  \n\t  //if texarea is empty, stop anything further, show/hide <Error/> component\n\t  if(this.getFormValue(/*promises,temp*/) === false)\n\t  {\n\t\t  setTimeout(function(){\n\t\t    $(\"html, body\").animate({ scrollTop: 0 }, \"slow\"); //scroll the page to top(mostly for mobile convenience)\n            $('.App').addClass('blur');  //blur the background\n\t\t    $(\".error-parent\").fadeIn(1500); //show error gif from <Error/>\n\t\t  }, 2000); // A delay of 1000ms\n\t\t\n\t\t   setTimeout(function(){\n              $('.App').removeClass('blur'); //removes blur from background\n\t\t\t  $(\".error-parent\").fadeOut(1000); //hide error gif from <Error/>\n           }, 3000); // A delay of 1000ms\n\t\t   \n\t\t  \n\t\t \n\t\t  \n\t  } else if(this.getFormValue(/*promises,temp*/) === true) {\n\t  \n\t      \n\t      //send the sms message with axios if this.getFormValue == TRUE\n          this.sendSmsMessage();\n\t }\n\t   \n\t\t\n\t\n\n\t\t  \n\t  \n\t  \n\t  //run axios ajax in loop\n\t   /*this.runAjax(promises,temp); */  //must pass {promises,temp} as arg to make them visible in function runAjax()//!!!!!!! RETURN ME===============\n\t  //this.drawResult();  //assigned to Promise.all(promises)\n\t  \n\t  \n\t  \n  }\n  // **                                                                                  **\n  // **                                                                                  **\n  // **************************************************************************************\n  // **************************************************************************************\n  \n  \n  \n  \n  \n  //gets the textarea value, split it to arraye and set to state\n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n  getFormValue(/*promises,temp*/){\n\t \n\n\t\t \n\t  if ($(\"#smsTextInput\").val().trim() === \"\"){\n\t\t //Display error\n\t\t //alert(\"empty\");\n\t\t swal(\"Stop!\", \"No sms text!\", \"error\");\n         return false;\t\t \n\t   }\n\t   \n\t    if ($(\"#cellNumberInput\").val().trim()=== \"\"){\n\t\t //Display error\n\t\t swal(\"Stop!\", \"No cell number!\", \"error\");\n         return false;\t\t \n\t   }\n\t   \n\t    //decides what regExt to use, if it is ua number use RegExp for ua numbers\n\t   if( $(\"#cellNumberInput\").val().match(/^\\+380/)){  //if it is ua number use RegExp for ua numbers\n\t        var regExpp = this.RegExp_Phone_UA; \n       } else {\n\t\t    var regExpp = this.RegExp_Phone; \n\t   }\t\t\t\n\t\t\t\n\t   //checks if cell number is correct, uses regular expressions RegExp_Phone_UA or RegExp_Phone. Additionally RegExp checking is used on cell number keypress (js/validate_regExp.js)\n\t\tif( !$(\"#cellNumberInput\").val().match(regExpp)){\n            swal(\"Stop!\", \"Phone number incorrect\", \"warning\");\n            return false;\n\t\t}\n\t\t\n\t\t//if all is OK\n\t\treturn true;\n \n  }\n  // **                                                                                  **\n  // **                                                                                  **\n  // **************************************************************************************\n  // **************************************************************************************\n   \n   \n   //NOT USED HERE, transfered to /functions_injected/sendSmsMessage. Complete version is there. Can delete here.\n   // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n  \n  /*\n   sendSmsMessage(){\n\t      \n\t    const headers = {\n        //'Content-Type' : 'application/x-www-form-urlencoded',\n\t\t'Content-Type':  'application/json',\n\t\t//'Accept': 'application/json'\n       };\n\t   \n\t   //axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n\t   \n\t   \n\t   \n\t   //data to send via ajax\n\t   var myData = { \n\t      serverPhone: this.state.phoneNumberChild,     //number\n\t\t  serverSms: this.state.smsTextChild,           //sms text\n\t\t  serverIfTestStatus: this.props.ifTestModeData //test/prod flag (set in <TopSectionButtons/>, uplifted to <App/> and passed here)\n\t   };\n\t   \n\t   \n\t   \n\t   \n\t   //------ Variant_2 (ajax withcontentType/dataType) => Works!!!! (The most correct)!!!!!!!!!!!!!!!!\n\t          //http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php\n\t      $(\".ajax-loader\").show(); //show loader\n\t\t  \n\t\t  \n\t\t  \n\t      $.ajax({ //use {http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php'} to test on localhost, use {../Server_Side/ajax_script/sendSms.php} on real hosting\n            url: 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php', //url: '../Server_Side/ajax_script/sendSms.php', //url: 'http://localhost/sms_Textbelt_Api_React_JS/sms-api-react/Server_Side/ajax_script/sendSms.php',//url: 'http://dimmm931.000webhostapp.com/sms_react_js/Server_Side/ajax_script/sendSms.php',//\n            type: 'POST',\n\t\t\t//contentType: \"application/json\",\n\t\t\tdataType: 'JSON', //'JSON', 'text/html' // without this it returned string(that can be alerted), now it returns object\n\t\n\t\t\tcrossDomain: true,\n\t\t\t//headers: {  'Access-Control-Allow-Origin': 'http://The web site allowed to access' }, \n\t\t\t//headers: { 'Content-Type': 'application/json' }, //NO HEADERS -> it will crash\n\t\t\t//passing some data.....\n            data: myData,\n\t\t\n            success: function(data) {\n               \n\t\t\t  alert(\"OK -> Variant_2\");\n\t\t\t  alert(\"Variant_2 \" + data.cellar);\n\t\t\t  alert(JSON.stringify(data));\n\t\t\t  console.log(data);\n\t\t\t  \n\t\t\t  if(data.textBeltResponse){ //textBeltResponse array is set in Classes/SendSms.php\n\t\t\t      \n\t\t\t\t   //this.setState({answerFromTextbelt : data.textBeltResponse.success});\n\t\t\t\t   \n\t\t\t\t  \n\t\t\t\t  alert(\"textBeltResponse \" + data.textBeltResponse.success);\n\t\t\t\t  \n\t\t\t\t  if(data.textBeltResponse.success === true){ //if sent\n\t\t\t\t      //update this.state.answerFromTextbelt (Variant for Object)\n\t\t\t\t      this.setState(prevState => ({\n                          answerFromTextbelt: {    // object that we want to update\n                              ...prevState.answerFromTextbelt,    // keep all other key-value pairs\n                              success: data.textBeltResponse.success, textId:data.textBeltResponse.textId,  // update the Object with key:value\n\t\t\t\t\t\t      quotaRemaining:data.textBeltResponse.quotaRemaining, clientMessage:'Sms sent successfully',\n                              errorFromApi: data.textBeltResponse.errorX\t\t\t\t\t\t\n                          }\n                      }));\n\t\t\t\t  } else {\n\t\t\t\t\t  //update this.state.answerFromTextbelt (Variant for Object)\n\t\t\t\t      this.setState(prevState => ({\n                          answerFromTextbelt: {    // object that we want to update\n                              ...prevState.answerFromTextbelt,    // keep all other key-value pairs\n                              success: data.textBeltResponse.success, textId:'',  // update the Object with key:value\n\t\t\t\t\t\t      quotaRemaining:'', clientMessage:'Sms was not sent successfully',\n                              errorFromApi: data.textBeltResponse.errorX\t\t\t\t\t\t\n                          }\n                      }));\n\t\t\t\t\t  \n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t     \n\t\t\t  } else { //if NO data.textBeltResponse, i.e no response from TextBelt Api\n\t\t\t\t\n\t\t\t\t  //this.setState({answerFromTextbelt : data.errorX});\n\t\t\t\t  \n\t\t\t\t   //update this.state.answerFromTextbelt (Variant for Object)\n\t\t\t\t  this.setState(prevState => ({\n                      answerFromTextbelt: {    // object that we want to update\n                        ...prevState.answerFromTextbelt,    // keep all other key-value pairs\n                        success: false, textId:'', quotaRemaining:'', // update the Object with key:value\n\t\t\t\t\t\tclientMessage:'Sms message was not send', errorFromApi: data.errorX  \n                     }\n                  }));\n\t\t\t  }\n\t\t\t\n\t\t\t  $(\".ajax-loader\").fadeOut(5000); //hide loader\n\t\t\t  \n\t\t\t  //set true to show Div with result in <ResultFromTextbeltApi/>\n\t\t     this.setState({ifUserClickedSendSms: true});\n\t\t\t \n             }.bind(this),  //end success //{.bind(this)} is a must otherwise setState won't work in success\n\t\t\t error: function (error) {\n\t\t\t\talert(\"Variant_2 failed\");\n\t\t\t\t$(\".ajax-loader\").fadeOut(5000); //hide loader\n\t\t\t\t\n\t\t\t\t//update this.state.answerFromTextbelt (Variant for Object)\n\t\t\t\tthis.setState(prevState => ({\n                    answerFromTextbelt: {    // object that we want to update\n                        ...prevState.answerFromTextbelt,    // keep all other key-value pairs\n                        success: false, textId:'', quotaRemaining:'', clientMessage:'Sms message crashed'  // update the Object with key:value\n                    }\n                }));\n\t\t\t\t\n\t\t\t   //set true to show Div with result in <ResultFromTextbeltApi/>\n\t\t      this.setState({ifUserClickedSendSms: true});\n\t\t\n            }.bind(this) //{.bind(this)} is a must otherwise setState won't work in success\t\n        });\n\t\t\n\t   \n\t   \n   }\n  */\n\n\n\n \n//===================================================================\n\n\n  \n  \n  //On key press (on print)  in phone number input, take its value, set it to {this.state.phoneNumberChild} and send it to parent component's state in <App/>\n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n   handlePhoneNumberKeyPress (event){\n\t   \n\t   \n\t   var inputPhone = event.target.value; //i.e == $(\"#cellNumberInput\").val()\n\t   \n\t   if( inputPhone.match(/^\\+3/)){  //decides what regExt to use, if it is ua number use RegExp for ua numbers //if( inputPhone.match(/^\\+380/)){ \n\t        var regExpp = this.RegExp_Phone_UA; \n\t\t    var messageError = ' incomplete UA number';\n\t\t    var messageOK = \"UA\";\n       } else {\n\t\t    var regExpp = this.RegExp_Phone; \n\t\t    var messageError = ' incomplete EU number';\n\t\t    var messageOK = \"EU\";\n\t   }\n\t \n       this.myValidate(inputPhone, this.id, regExpp, 'sendButton', messageError, messageOK, event);   //{e} new must have arg, otherwise not visible\n\t   \n\t   // Remember that setState is asynchronous, so if you want to print the new state, you have to use the callback parameter\n       this.setState({phoneNumberChild: event.target.value} //i.e == $(\"#cellNumberInput\").val()\n\t     , () => {\n          //sends {this.state.smsTextChild} to parent <App/>, send it as callback\n\t      this.props.liftPhoneNumberHandler(this.state.phoneNumberChild);\n       });\n\t   \n\t   \n   }\n   \n  \n  //On key press (on print) in sms textarea, take texterea value, set it to {this.state.smsTextChild} and send it to parent component's state{state.smsText} in <App/>\n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n   handleTextAreaKeyPress (event){\n\t   var smsText;\n\t   \n\t    // Handle the delete/backspace key\n       /* if (event.keyCode === 8 || event.keyCode === 46) { alert('dd');\n\t\t   return;\n\t   } */\n\t   \n\t   //decide what limit to use for sms text input (based if text contain russ chars)\n\t   if(this.ifCyrillicSmsCheck()){\n\t\t    this.setState({limitForSmstext: this.limitCyrill});\n\t\t\t//this.limit = this.limitCyrill; //70;\n\t\t} else {\n\t\t    //this.limit = this.limitLatin; //120;\n\t\t\tthis.setState({limitForSmstext: this.limitLatin});\n\t\t}\n\t    var texted = event.target.value; //textarea input\n\n\t   //Check if current sms textarea input is no bigger than limit(this.state.limitForSmstext)\n\t   if(texted.length >= this.state.limitForSmstext){\n\t\t    //return false;\n\t\t   \n\t\t   //flash message to show that limit is reached\n\t\t   $(\".flash-message\").clearQueue().fadeIn(100).fadeOut(900);\n\t\t   \n\t\t   smsText = event.target.value/* this.state.smsTextChild */.substring(0, this.state.limitForSmstext); //trim sms to limit length\n\n\t\t  \n\t   } else {\n\t\t   \n\t\t   smsText = event.target.value;\n\t   }\n\t   \n\t       // Update this.state.smsTextChild with new sms textarea input.\n\t\t   //Remember that setState is asynchronous, so if you want to print the new state, you have to use the callback parameter\n           this.setState({smsTextChild: smsText /*event.target.value*/}\n\t           , () => {\n               //sends {this.state.smsTextChild} to parent <App/>, send it as callback\n\t           this.props.liftSmsTextHandler(this.state.smsTextChild);\n           });\n\t   \n\t   \n\t   \n   }\n   \n   \n      \n   //on paste to sms textArea\n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n   handleTextAreaPaste(e){\n\t   var smsText;\n\t   var pastedData = e.clipboardData.getData('Text'); //gets the paste text\n\t   e.preventDefault(); //must-have to work without errors\n\t   \n\t   //if current sms text in textarea or clipboard text contains russian\n\t\tif(this.ifCyrillicSmsCheck() || pastedData.match(/[а-яА-ЯЁё]/)){ //\n\t\t\t this.setState({limitForSmstext: this.limitCyrill});\n\t\t\t//this.limit = this.limitCyrill; //70;\n\t\t} else {\n\t\t    //this.limit = this.limitLatin; //120;\n\t\t\tthis.setState({limitForSmstext: this.limitLatin});\n\t\t}\n\t\t\n\t\t//Check if current sms textarea input is no bigger than limit(this.state.limitForSmstext)\n\t   if(pastedData.length >= this.state.limitForSmstext){\n\t\t   //flash message to show that limit is reached\n\t\t   $(\".flash-message\").clearQueue().fadeIn(100).fadeOut(700);\n\t\t   \n\t\t   smsText = pastedData.substring(0, this.state.limitForSmstext); //trim sms to limit length\n\n\t\t  \n\t   } else {\n\t\t   \n\t\t   smsText = pastedData;\n\t   }\n\t   \n\t       // Update this.state.smsTextChild with new sms textarea input.\n\t\t   //Remember that setState is asynchronous, so if you want to print the new state, you have to use the callback parameter\n           this.setState({smsTextChild: smsText /*event.target.value*/}\n\t           , () => {\n               //sends {this.state.smsTextChild} to parent <App/>, send it as callback\n\t           this.props.liftSmsTextHandler(this.state.smsTextChild);\n           });\n\t   \n\t\t\n\t\t\n   }\n   \n   \n   \n   \n   //clear this State, ie. fields\n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     **\n   resetFields(){\n\t   this.setState({phoneNumberChild: \"\"}); //reset phone number\n\t   this.setState({smsTextChild: \"\"});     //reset sms text\n\t   this.setState({phoneNumberErrorMessage: \"\"}); //reset error message for phone number\n\t   this.setState({ifUserClickedSendSms: false}); //set false to hide Div with result in <ResultFromTextbeltApi/>\n\t   \n\t   //reset vallues in this.state.answerFromTextbelt (Variant for Object).In order to hide prev Delivery status\n\t   this.setState(prevState => ({\n           answerFromTextbelt: {    // object that we want to update\n                ...prevState.answerFromTextbelt,    // keep all other key-value pairs\n                success: false, textId:'',  // update the Object with key:value\n\t\t\t    quotaRemaining:'', clientMessage:'',errorFromApi: ''\t\t\t\t\t\n                          }\n       }));\n\t   //$('.phone-error').html(\"\");\n           \n   }\n\t  \n  //to check if sms text ru or engl \n  // **************************************************************************************\n  // **************************************************************************************\n  //                                                                                     ** \n   ifCyrillicSmsCheck() { \n       var ruText = /[а-яА-ЯЁё]/;\t\n\t   if( $('#smsTextInput').val().match(ruText)){  //alert('ru');\n\t       return true;\n\t   } else {\n\t\t   return false;\n\t   \n        }\n\t}   \n\t\n\n  \n  //RENDER ------------------------------------------------\n  render() {\n      //var liftFinalCoordsHandler  =   this.props.liftFinalCoordsHandler ; //for lifting state up to parent\n\t  var handleToUpdateIfDeliverClicked  = this.handleToUpdateIfDeliverClicked; //uplift to <TextArea/>\n\n\t  \n      return (\n\t   \n\t     <div>\n\t\t {/*<CopyLayout/>*/}\n\t         <form className=\"textarea-my\">\n\t\t\t     \n\t\t\t\t <div className=\"form-group\">\n\t\t\t\t \n\t\t\t\t     <DisplayPhoneRegExpMessage status={this.state.isEnable} phoneNumberErrorMessageX={this.state.phoneNumberErrorMessage}/> {/* Message if RegExp founds cell number OK/or NOT*/}\n\t\t\t\t\t {/*<span className={this.state.isEnable ? 'err-mess-wrong phone-error' : 'err-mess-ok phone-error'} > {this.state.phoneNumberErrorMessage} </span> */ }  {/* Message if RegExp founds cell number OK/or NOT*/}\n                     \n\t\t\t\t\t <input type=\"text\" id=\"cellNumberInput\"  placeholder=\"Cell number\" className=\"form-control shadow-xx shadow-text\" value={this.state.phoneNumberChild} onChange={this.handlePhoneNumberKeyPress}/> \n\t\t\t\t </div>\n\t\t\t \n\t\t\t     <div className=\"form-group\">\n                     <textarea id=\"smsTextInput\" rows=\"8\" cols=\"80\" placeholder=\"Your sms...\" className=\"form-control shadow-xx shadow-text\" value={this.state.smsTextChild}  onChange={this.handleTextAreaKeyPress} onPaste={this.handleTextAreaPaste}/> \n\t\t\t\t </div>\n\t\t\t\t \n\t\t\t\t <CountSmsText smsText={(this.state.limitForSmstext - this.state.smsTextChild.length)}/> {/* count chars left for smsText, i.e current limit - currentText length */}\n\n\t\t\t\t <div className=\"form-group buttonsX\">\n                      <input type=\"button\" className=\"btn btn-success btn-md el\" value=\"Send\" id=\"sendButton\" onClick={this.run_This_Component_Functions_In_Queue} /* disabled = {this.state.isEnable} */ /> {/* Functionality to disable button if cell number is not OK is TURNED OFF HERE */}\n\t\t\t\t\t  <input type=\"button\" className=\"btn btn-primary btn-md el\" value=\"Reset\" id=\"\" onClick={this.resetFields} />\n\t\t\t\t     {/*<input type=\"button\"  value=\"Lift Coords\" onClick={() => liftFinalCoordsHandler('Lifted_TextArea')}/> */}\n\t\t\t\t</div>  \t\t\n\t\t\t\t\n             </form>\n\t\t\t \n\t        <ResultFromTextbeltApi answer={this.state.answerFromTextbelt} ifTestModeData2={this.props.ifTestModeData}  \n\t\t\t                       showHideDivData={this.state.ifUserClickedSendSms} ifUserClickedCheckDeliveryData={this.state.ifUserClickedCheckDelivery} \n\t\t\t                       handleToUpdateIfDeliverClicked = {handleToUpdateIfDeliverClicked.bind(this)}/>\n\t\t\t \n\t\t\t <AjaxLoader/>\n\t\t     <FlashMessage/>  {/* Left 0 chars */}\n\t\t</div>\n\t  \n    );\n  }\n}\n\nexport default TextAreaX;\n","//USED in <TextArea/> as injected function \n\n//import React, { Component } from 'react';\nimport $ from 'jquery';\n//import swal from 'sweetalert';\n\n/*import error from '../../images/error.gif';\nimport '../../css/TextArea.css';\nimport axios from 'axios';\nimport CopyLayout from '../Copy/CopyLayout';\n*/\n\n\n\n\n\n//Function that Validates inputs on change (confirm delete 2nd arg (id)?????).\n// **************************************************************************************\n// **************************************************************************************\n// \n//export const myValidate =(thisX, id, regExp, butttonToDisable,  messageErr, messageSuccess, e) =>{                                                                                   ** \nexport function myValidate (thisX, id, regExp, butttonToDisable,  messageErr, messageSuccess, e) { //{e} -. it is change event from {$(document).on(\"change\", '.fileCheck', function(e) { }\n//args(input, $this.id, RegExp, button to disable, error message to show, event)\n\n     \n\t \n     //if (e.target.files[0].name !=='')\n     if(thisX !==''){\n\t\t\n\n\t\t//gets the input\n        var idm = thisX;\n\n        //if  REgEXp  match\n        if (idm.match(regExp)){ \n\t\t    this.setState({phoneNumberErrorMessage: 'correct ' + messageSuccess + ' phone'});\n\t\t\tthis.setState({isEnable : false});\n            //$('.phone-error').html('<span style=\"color:green;\">correct ' + messageSuccess + ' phone</span>');//thisX.prevAll(\".sp:first\").html('Correct');// erase  error  message //$(\"#\" +id).prevAll(\".sp:first\").html('Correct');// erase  error  message\n\t\t\t//$(\"#\" + butttonToDisable)/*$(':input[type=\"submit\"]')*/.prop('disabled', false); //enable  button  //$(':input[type=\"button\"]').prop('disabled', false);\n            $(\"#\" + butttonToDisable).html('OK');\n                      \n         } else {  //if RegExp does not  match\n\t\t     this.setState({phoneNumberErrorMessage: messageErr});\n\t\t\t this.setState({isEnable : true});\n             //$('.phone-error').html('<span style=\"color:red;padding:0.1em 1em;background: white;\">' + messageErr + '</span>');//thisX.prevAll(\".sp\").html(messageErr);   //$(\"#\" +id).prevAll(\".sp:first\").html(messageErr);   //finds the 1st prev span\n\t\t\t //$(\"#\" + butttonToDisable)/*$(':input[type=\"submit\"]')*/.prop('disabled', true);\n             $(\"#\" + butttonToDisable).html/*val*/('Disabled');\n         }\n   \n     } else {//if  the input is empty, set no  error to span\n\t      this.setState({phoneNumberErrorMessage: '*'});\n\t\t  this.setState({isEnable : false});\n         //$(\".phone-error\").html('');\n\t\t //$(\"#\" + butttonToDisable).prop('disabled', false);\n         $(\"#\" + butttonToDisable).html('OK');  \n\t\t return false;\n     } \n}\t\n\t   ","//USED in <TextArea/> as injected function \n\n//import React, { Component } from 'react';\nimport $ from 'jquery';\nimport 'jquery-ui/ui/widgets/autocomplete';\nimport 'jquery-ui/themes/base/autocomplete.css';  //according to folder stucture in node_modules\nimport swal from 'sweetalert';\n\n/*\nimport error from '../../images/error.gif';\nimport '../../css/TextArea.css';\nimport axios from 'axios';\nimport CopyLayout from '../Copy/CopyLayout';\n*/\n\n\n\n\n\n//Function that Validates inputs on change (confirm delete 2nd arg (id)?????).\n// **************************************************************************************\n// **************************************************************************************\n//                                                                                     ** \n//export const AutocompleteFunction =() =>{ \nexport function AutocompleteFunction (){ \n\n  //alert('Autocomplete is ON');\n  swal(\"Phone numbers autocomplete is ON\", \"---\", \"warning\");\n\n   \n   var availablePhoneTags = [ //\"+38097664\", \"+38097854\",\n\t\t\t\t\t\t\t{label: \"+420\", value : \"Czech\"},\n\t\t\t\t\t\t\t{label: \"+45\",  value : \"Denmark\"},\n\t\t\t\t\t\t\t{label: \"+49\",  value : \"Germany\"},\n\t\t\t\t\t\t\t{label: \"+972\", value : \"Israel\"},\n                            {label: \"+48\",  value : \"Poland\"},\n                            {label: \"+46\",  value : \"Sweden\"},\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{label: \"+38\",  value : \"Ukraine\"},\n\t\t\t\t\t\t\t{label: \"+44\",  value : \"United Kingdom\"},\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t  \n        ];\n\t\t\n\t\t//must-have this context \n\t\t// CHANGE FOR REACT!!!!!!!!!\n\t\tvar that = this;\n\t\t\n\t\t//fix function for autocomplete (u type email in <input id=\"userName\">, get autocomplete hints and onSelect puts email value (i.e user ID to) to hidden <input id=\"userID\">)\n\t     function displaySelectedCategoryLabel(event, ui, that) {\n\t\t\t   \n             //sets the selected to state in parent <TextArea/>\n     \t\t that.setState({phoneNumberChild: ui.item.label}); //$(\"#cellNumberInput\").val(ui.item.label);\n\t\t\t that.handlePhoneNumberKeyPress(event); //reTrigger function that normally works on phone number change, validates number and uplift to parent <app/>\n\t\t\t \n            //$(\"#userID\").val(ui.item.value); //hidden <input id=\"userID\"> to contain user (get from autocomplete array)\n            event.preventDefault();\n        };\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t//Autocomplete itself\n\t\t$(\"#cellNumberInput\").autocomplete({\n           minLength: 1,\n           source: availablePhoneTags, //array of objects for autocomplete\n\t\t   \n\t\t   select: function (event, ui) {\n                 displaySelectedCategoryLabel(event, ui, that); //$(\"#cellNumberInput\").val(ui.item.label);/displaySelectedCategoryLabel(event, ui);\n            },\n        })\n\t\t//build custom hints display\n\t\t.autocomplete( \"instance\" )._renderItem = function( ul, item ) {\n        return $( \"<li>\" )\n        .append( \"<div>\" + item.label + \" => \" + item.value + \"</div>\" )\n        .appendTo( ul );\n      };\n}\t\n\t   ","import React, { Component } from 'react';\nimport errorIMG from '../../images/error.gif';\nimport '../../css/Error.css';\n//import $ from 'jquery';\n//import axios from 'axios';\n\nclass ErrorLayout extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n\t\t//addressArray: [],  //this state will hold array with separ addresses\n    };\n \n \n    // This binding is necessary to make `this` work in the callback\n\t//this.copy_table_result = this.copy_table_result.bind(this);\n  }\n  \n\n  \n  \n  \n  \n   \n   \n   \n  \n  //RENDER ------------------------------------------------\n  \n  render() {\n    return (\n\t    <p className=\"error-parent\">\n\t\t    {/* Hidden loading copy indicator */}\n\t\t    <span id='error_loading'>\n\t\t\t    <img src={errorIMG}  className=\"error-img\" alt=\"logo\" />  {/*  hidden by default */}\n\t\t    </span>  \n\t\t</p>\n    );\n  }\n  \n}\n\nexport default ErrorLayout;\n","import React, { Component } from 'react';\n//import TrendTopic from './TrendTopic';\n//import logo from '../../images/api.jpeg';\n//import '../../css/LiftedComponent.css';\n//import $ from 'jquery';\n\n\nclass LiftedTo_Component extends Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n\t\t\t\n        };\n   }\n  \n \n  \n  //RENDER ------------------------------------------------\n  render() {\n\t  \n\t  //iterate over array to form list \n\t  const newV = this.props.passedtechInfoValue.map(function(item, i){\n\t     return <li key={i}>{item}</li>\n      });\n\t  \n    return (\n\t   \n\t   <div className=\"lifted-to\">\n\t\t   <h5>\n\t\t       <p className=\"underline\">\n\t\t           Displays parent App.js states, which are updated/uplifted from TextArea.js and TopSectionButtons.js  => \n\t\t\t   </p>\n\t\t       \n\t\t\t   <p className=\"underline\">\n\t\t           Phone number and sms are uplifted from TextArea to App.js just for test control, as when sending a sms, this app uses state values from Textarea, while TestMode Status is used from App.js (and passed from App.js to TextArea.js as props)\n\t\t\t   </p>\n\t\t\t   \n\t\t       <p className=\"underline\">\n\t\t           Passed States (passed from parent App.js) are:\n\t\t\t   </p>\n\t\t\t   \n\t\t\t    <p>\n\t\t\t      {this.props.passedPhoneNumberValue} {/* here goes lifted from Parent app.js value*/}\n\t\t\t   </p>\n\t\t\t   \n\t\t\t   <p>\n\t\t\t       {this.props.passedSmsValue} {/* here goes lifted from Parent app.js value*/}\n\t\t\t   </p>\n\t\t\t   \n\t\t\t   <p>\n\t\t\t     <b>Test:</b> {this.props.passedIfTestModeValue.toString()} {/* uses .toString() otherwise boolean won't be displayed */}\n\t\t\t   </p>\n\t\t\t   \n\t\t\t   {/* Shows alerts info */}\n\t\t\t   <p>\n\t\t\t       <b>TechInfo:</b> {newV} {/* */}\n\t\t\t   </p>\n\t\t\t   \n\t\t   </h5>   \n\t\t   \n\n\n \n\n\t\t\t   \n\t\t\t   \n\t\t  \n\t\t   \n\t   </div>\n\t  \n    );\n  }\n}\n\nexport default LiftedTo_Component;\n","import React, { Component } from 'react';\nimport '../../css/Technical_Info.css';\nimport LiftedTo_Component from '../LiftUpComponent/LiftedTo_Component';\n//import error from '../../images/error.gif';\n/*\nimport State_Array_List_Builder from '../Build_List_from_State_Array/State_Array_List_Builder';  //Component creates List from State Array\nimport LiftedFrom_Component from '../LiftUpComponent/LiftedFrom_Component';\n*/\n//import $ from 'jquery';\n\n\n\nclass TechnicalInfo extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n\t\t\n    };\n \n    // This binding is necessary to make `this` work in the callback\n\t//this.run_This_Component_Functions_In_Queue = this.run_This_Component_Functions_In_Queue.bind(this); //runs all functions together\n    /* var handleToUpdate = this.handleToUpdate.bind(this);  //for catching lifted state from LiftedFrom_Component */\n  }\n  \n\n   //methodfor catching lifted state from LiftedFrom_Component, triggerd onClick\n    /* handleToUpdate(someArg){\n            alert('We pass argument from Child to Parent (now we are in <Technical_Info/>): ' + someArg);\n            //this.setState({arg1:someArg});\n\t\t\t//let v = someArg;\n\t\t\tthis.props.handleToUpdate(someArg);\n    } */\n  \n  \n  \n  \n  //RENDER ------------------------------------------------\n  render() {\n\t  /* var handleToUpdate =  this.handleToUpdate; */ //for catching lifted state from LiftedFrom_Component\n\t  \n\t  /* maps() args=>(content, iterator, arryitself)*/\n      /* let constructed_answer = this.props.techInfoData.map((techItem, i, arrayZ) =>{ {}\n\t       \n\t       return(\n               <li key={techItem.toString()}>\n\t\t          {techItem}\n\t\t       </li>\n\t\t   );\n\t\t   \n       }) */\n\t  \n      return (\n\t\t<div className=\"col-sm-12 col-xs-12\"> \t \n          <div className=\"dropdown\">\n              <input type=\"button\" className=\"btn btn-primary border-x\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\" value=\"Technical Info\" />\n\t\t\t       \n\t\t\t\n\t\t\t\t  \n              <div className=\"collapse col-sm-12 col-xs-12 text-left\" id=\"collapseExample\">\n\t\t\t         <p className=\"underline\"> Alerts Replacer (TechnicalInfo/> -- uses LiftUpComponent/ LiftedTo_Component/>): </p>\n\t\t\t\t     {/* {constructed_answer} */} {/* alerts goes there */}\n\t\t\t\t\t \n\t\t\t\t\t {/* <LiftedFrom_Component handleToUpdate = {handleToUpdate.bind(this)}/>  */ } { /* LiftedComponent component, send/uplift value onClick to App.js */ }\n\t\t\t\t\t <LiftedTo_Component passedSmsValue={this.props.smsTextData}  passedPhoneNumberValue={this.props.phoneNumberData} passedIfTestModeValue={this.props.ifTestModeData}  passedtechInfoValue={this.props.techInfoDate} />               { /* LiftedComponent component for displaying states from App.js */ }\n\t\t\t\t\t {/*<State_Array_List_Builder numbers={this.props.numbers}/>  */ }         {/*techInfoHandler={techInfoHandler.bind(this)}*/}   {/* Component creates List from State Array*/}\n              </div>\n\t\t\t \n          </div>\n\t\t</div>\n\t  \n    );\n  }\n}\n\nexport default TechnicalInfo;\n","import React, { Component } from 'react';\nimport '../../css/TopSectionButtons.css';\nimport {changeThemeInjected} from './functions_injected/changeThemeInjected'; //import my function\n\n//import error from '../../images/error.gif';\n\n//import $ from 'jquery';\n\n\n\nclass TopSectionButtons extends Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {\n\t\twallPapperCount : 0,\n\t\tifTestMode : true,\n\t\ttestButtonText : 'Test mode'\n\t\t\n    };\n \n    // This binding is necessary to make `this` work in the callback\n\tthis.runChangeThemeFunct = this.runChangeThemeFunct.bind(this);\n\tthis.changeThemeInjected = changeThemeInjected.bind(this); //for injected from files function\n\tthis.runChangeTestModeFunct = this.runChangeTestModeFunct.bind(this);\n\t\n\n  }\n  \n  //run changing theme, uses injected file\n  runChangeThemeFunct(){\n\t  this.changeThemeInjected();    \n  }\n \n \n \n  //change Test Mode/Production mode on button click\n  runChangeTestModeFunct(){\n\t  \n\t  //toogle the state \n\t  this.setState(prevState => ({\n          ifTestMode: !prevState.ifTestMode\n      })\n\t  //as it async, then do...\n\t  , () => {\n\t\t  \n\t\t   \n\t\t   //uplift the state \n\t\t   //sends {this.state.smsTextChild} to parent <App/>, send it as callback\n\t        this.props.liftTestModeStatustHandler(this.state.ifTestMode);\n\t\t  \n\t\t   //change the text of button by state\n\t       if(this.state.ifTestMode === true){\n\t\t       this.setState({testButtonText: \"Test Mode\"}); \n\t\t   } else {\n\t\t\t   this.setState({testButtonText: \"Prod Mode\"});\n\t\t   };\n\t\t   \n\t\t  \n       });\n\t   \n\t  \n  }\n  \n  \n  //RENDER ------------------------------------------------\n  render() {\n\t\n\t  \n      return (\n\t\t<div className=\"col-sm-12 col-xs-12 top-buttons\"> \t \n           <button className=\"btn btn-sm btn-my shadowX change-theme\" onClick={this.runChangeThemeFunct} >Theme <i className=\"fa fa-repeat\"></i></button>\n\t\t   \n\t\t   {/* Test mode button*/}\n\t\t   <button className={this.state.ifTestMode ? 'btn-test-mode btn btn-sm btn-my shadowX btn-next' : 'btn-dev-mode btn btn-sm btn-my shadowX btn-next'} onClick={this.runChangeTestModeFunct}> {this.state.testButtonText } <i className=\"fa fa-link\"></i></button>\n\t\t</div>\n    );\n  }\n}\n\nexport default TopSectionButtons;\n","//import React, { Component } from 'react';\n//import $ from 'jquery';\n//import swal from 'sweetalert';\n\n/*import error from '../../images/error.gif';\nimport '../../css/TextArea.css';\nimport axios from 'axios';\nimport CopyLayout from '../Copy/CopyLayout';\n*/\n\n\n\n\n\n//Function that \n// **************************************************************************************\n// **************************************************************************************\n// \n//                                                                                     ** \nexport function changeThemeInjected () {\n\t\n\tvar wallURL = [\n\t\n\t    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQsQf2-zwuStKf6u2V2HE_nCy9rRvk5M8ag043FAenQbOrCXY3tA', //violat blocks\n\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Color_icon_purple.svg/2000px-Color_icon_purple.svg.png', //same in HD\n\t\t//'http://www.sensationalcolor.com/wp-content/uploads/2009/12/purple350x350.jpg', //same HD\n\t\t//'http://www.color-hex.com/palettes/1835.png',   //!!!!!\n\t\t'http://paperlief.com/images/blue-purple-gradient-wallpaper-2.jpg',  //puprle gradient\n\t\t//'http://paperlief.com/images/purple-color-gradient-wallpaper-1.jpg',  //deep blue\n\t\t'http://marcialmiller.com/wordpress/wp-content/uploads/2011/01/AllPatternBlockDesignbyBen-300x266.jpg',\n\t\t'http://marcialmiller.com/wordpress/wp-content/uploads/2011/01/Rowof5Hexagons-300x137.jpg',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTDhtR1BhDwTew8S7AJcbI94v0UFv2pjXwt2kdsqBSxfcgi8uObLg',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSv-cxQe9A6rZsR8JUE_zJwX5S94nVXyaIy1H6NyhTNw1S_sv-P',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvhyI_kI_Xaw_-a-MRTYeFpVWGlS9-zrP-mdDl_XTPh71wGuV6Mw',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRK3pJbHeAoIHUlC3DUS38TW-hYjPrEgid6HSrg-nNnT0JFz-eqyA',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS_ZKIBvxb64CAuTASJHnrBzqyX_v_QwmJORswtVHC9vU-gvi9JlA',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQmRq-OXCzPXuuxEGABGb3yK1qUeSxPMIBKtzimgUMGKUipjQZztw',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSIkwu2oXo3ZV5VpHJs0BP32y78wQyuts-GBuLcs4PgEqa03SJ0uw',\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQONTF91XqYYCUUD8bQFRnRouMRq4Lxp7h0PijXJMpkkjT4Djb0sQ',  //bricks\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSIgoIVKj2tvvrwKirnEvLIVp7XEE2VpyEB4HVpAopp6p-Jvppe',\n\t\t//'https://i0.wp.com/www.citiefy.com/wp-content/uploads/2016/04/Background_47-01-e1459829663432.jpg?fit=450%2C337', // samsung\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQQdfBdh9TMh6MZfwbE3gkcyum_qeAv4t0QQ6zRGqGbJAJlWo_P',   //blue\n\t\t'https://img00.deviantart.net/6ad0/i/2008/122/9/8/colorful_gradients_by_scientiaofborg.jpg',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTqyBNgb1If2M5s5u4Eqie-8BnC3D4q3ZgEirc8fXwBtUKiy96E-w',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSka_Yl4YtYQWSz2T5l64Z9LeVJwdH_LoctsnU_lXZ_BbmDVBka',  //sea\n\t\t'http://notgoaway.com/wp-content/uploads/2017/08/Orange-Wallpaper-158-Go.jpg',  //orange\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRWvD8MhkqMhnTziRDDqKmVWvwP2YrZ3Qk55TPs7oxP_DTwYYNrBg',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTekHPENYuvbwRmIXKoff5JHA1z3vC_XoAwbVXGgyCRE8uX6f26',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQiLABN0zBTJV8kVyBdef307WbrYkANbnLa03aWcjZ9Dj2l8cL',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRTjMtl9M8g5BwuOBIWTWCcAVJFLeiGWifLEYl8i2JakRBXXZto',\n\t\t'https://st2.depositphotos.com/4724153/11516/v/950/depositphotos_115160878-stock-illustration-vector-hand-drawn-pattern-for.jpg', //fml portrait\n\t\t\n\t\t\n\t\t \n\t    //'https://i.pinimg.com/originals/08/58/d6/0858d6df28c34239fe8e0077e19be750.png',  //cash\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQvp8gXVXK0Vb7ctlANuwugGW13OTnAWqriztJUGoBRXd0CXK8',    //blue\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQfDxrC1c4GaaJmBlciFeUZ8bsHheWefJXbGiUOFYOnXR5oGrVhAg',  //steel\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcScJTFmh8ur7hPYFn543z7OnYh1Kv3d51AQWWFiPDjJH8Bm7O3K',    //blue 2\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSFcDV5NdKfWnGR_cnEIO-iT-3hX_HtEpgPv5OFIhG3-Kgt_4Z0',    //green\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRZi0cgMZX4iIJRbOXYZhmzPvKVXdWM8gMSFII6VKtKJlaHEBBs8Q',    //\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSS4eUvBUEqNvtTWJqe2n0j-LrZZHpXMCLRII8gBdj66J8yyg_h',     //steel\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQMuDL_pJKTnIt9lWX7WxiXdQOD7pg0TMXHdS5opQixcod3IbozDQ',   // white color\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ6mN6UajC1pXOOJ11DW1OKLL-X8tZ_0LzIuw3axNFgt2veGffesw',    //very color\n\t\t'https://thumbs.dreamstime.com/z/sunny-seamless-pattern-yellow-orange-sun-shapes-blue-background-34440134.jpg',      //patt blue\n\t\t'https://rfclipart.com/image/preview/34-00-e9/seamless-color-hand-drawn-sunny-pattern-Download-Royalty-free-Vector-File-EPS-153192.jpg', //mandala\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSn0QY9pg43mzXhjbmW_N6p7ztO1R8ztK6cU8bx3Np6e-Pn8IJwRA',  //rain\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQt8cHzsOjY4rCNqAdG4jUJY0VseU4_3IsB5QRwNuRGJk5ed5Awtg',  //rain2\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSyRMbAKCXIwpkaYHqS2pPDSqWz1ko9t8uqTTfrJGFdZHciymtu',   //thunder\n\t\t'http://www.proactivedental.com.au/wp-content/uploads/2015/10/girl-248x300.png',   //fml\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTzEPWGOzxTXCXYCBi4WajukuQQ7Q7PlOA-FGzQsKV_cxjT2fPvxw', //sunset\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPIBUy2Ru9gOD3vJUrRnWqCojmEftftOM0K_WvmW6fi70MDAl8',  //search\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvwOeUhq4-8t_xS98RZyj6Atk-tWNIXiZphHolDpusOAAj607S', //road\n\t\t\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1OpSRjwhd0nyJcTZYZ6lUo4v46eYVpZkSJgOizuVk0ldeFffg', //islam\n\t\t//'https://banner2.kisspng.com/20180308/oze/kisspng-islamic-architecture-motif-pattern-islamic-traditional-decorative-patterns-5aa104eb92d7b2.2841900615205019956015.jpg',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTYsQ04RfZT4vWwxrfTCXuBAmeG6YSpzJZtT-bPhVbxj9u0CfyZ',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRz_GlZLlJCAW4mXLKNOqvVEs8NdUOalVbzGdl9Sdwnf-wpapp7Jg',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXycguf1VLYxNuHJ_Vp0ynyEYCrn0tI76jl4fRCrnfGpod3UzWzQ',\n\t\t'http://www.wallpaper-box.com/smartphone/wp-content/uploads/2014/09/Colorful-abstract-wallpaper-433x191.jpg',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTbzFbadouFp0oi4agez0lv9En7GPsGyQE1G_bXQX085b7X_pfkFg',\n\t\t'http://getdrawings.com/image/space-drawing-56.jpg',         //space-drawing-56\n\t\t//'http://getdrawings.com/images/space-drawing-3.jpg',        //space black white\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQsI5s1TRhYvyua-35eDL5XbPiU3VLH9Kp15hVZECaZRheH2bVH',\n\t\t'https://d298hcpblme28l.cloudfront.net/product-lg/0ef1de67e9bf4a860e954aa3b1e2bad1.jpg',                  //space black\n\t\t'https://png.pngtree.com/element_origin_min_pic/17/08/19/0dffc570d4ae2954f3b949e5868fd774.jpg',          // star sky\n\t\t//'https://www.wpclipart.com/textures/floral/floral_seamless_pattern_green.png',           //green\n\t\t'https://banner2.kisspng.com/20180226/vzw/kisspng-coffee-green-tea-cafe-matcha-green-coffee-shop-pattern-5a94b3d232f101.3641932715196948022087.jpg',  //green cattle\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRzbHoI7xYqlWr1zZAtoA1tAalUJaPixTnAvZdr95QD4IKCjou3',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ3FtYsBBt6wS_Lx7mx3BeEtIKgIn30fyJXHCPkBXzUHKrrDvastQ',\n\t\t'https://repperpatterns.com/www/wp-content/uploads/2010/11/MWM_pattern_tile_6-558x558.jpg',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRECg7KSDri3xJSW01qbtMzRWZNt_TQzrL1d-sZ3TT5rIl8wCnW',\n\t\t'http://lenapechamberensemble.org/wp-content/uploads/2017/08/blue-pattern-background-photos-free-landscape-1920x1080.jpg', //main\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6SdcsdwHeRnkC6tFXIQ-2RxvVA5EAXL0oOKvZzDzFFOU-OrdXeQ',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2pPLLyGTTLw4NmySGqEmxLqJH2SnR7VKVbO0JSP-ECA7HfNRc',\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNpuzE-XYHgupP4_IMvlmNq1V497cgDDWC-YserhOiulHvMldM', //smiles\n\t\t'https://image.freepik.com/free-vector/green-flowers-pattern-background_1217-148.jpg',\n\t\t'https://naldzgraphics.net/wp-content/uploads/2014/09/Free-Fractal-Patterns.jpg',  //fracral\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTZSNkPSqE-hmJdM_MZV0Sa-QWXnC3uvYwbdTG1q0vrTxU3OApM',\n\t\t'https://pre00.deviantart.net/ec44/th/pre/f/2015/071/c/2/fractal_pattern_3_by_nic022-d8ldvzx.jpg', //fracral grey\n\t\t'http://www.fractalsciencekit.com/fractals/small/Fractal-Julia-Pattern-Map-69.jpg',  //fractal blue\n\t\t'http://www.fractalsciencekit.com/fractals/small/Fractal-Julia-Pattern-Map-73.jpg',  //fractal grey\n\t\t'http://www.fractalsciencekit.com/fractals/small/Fractal-Julia-Pattern-Map-63.jpg',\n\t\t'http://www.fractalsciencekit.com/fractals/small/Fractal-Julia-Pattern-Map-61.jpg',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTCbxKesoUoiNgk2TAODQmVJoefy_lxkZ6ZjmOjmysO86GCLqwJ',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQBhwXqhpym9ERAW4TFayPTk1Gdd3bct7NnATfxgGIKxPrkU-oB',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRt0q4G1wnP3MazNn7u8lY8gVU3C4A8FwQSiOHkvC1RJB5ZQqRb4Q',\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRW417ozC4rmNrHPYnf5yT6ubKJGX0VERWJIK-oMthcozvQ2l3C', // flowers-pattern-background_1217-148\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRK5CEb0aWO3PNsjIB8_LtLtMU_KG-YhLlBcMe8k9BnFIsTZH0e-w', //tree\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcScgKP-lul4CuoNj78r4dH7UVS_Zx2uSQnStT5osSCSph7f9B1aaQ',  //cats\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSHUaNW2Q5e45JnD0ynSXD88RBnPWqPn9Z5vuxHGQtRAsKPuQGtMA', //dnb\n\t\t'http://notgoaway.com/wp-content/uploads/2017/08/Orange-Wallpaper-158-Go.jpg',  //orange\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXHZrLrBJz2DPTgn82fq_c6_pFN9vj-0ABd7uzO8-aQ83HW-26', //text\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQsQf2-zwuStKf6u2V2HE_nCy9rRvk5M8ag043FAenQbOrCXY3tA', // violet WEATHER MAIN\n\t\t'https://www.welovesolo.com/wp-content/uploads/vector/46/Pattern-word-cloud-creative-vector-07.jpg',  //text 3\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHbhzuoJFsUlWKBKqGRtReqUAcWg6TbphM3BPEzeQDJa-sqfl6',  //violet\n\t\t'',  //EMPTY\n   ];\n   \n  \n  \n  \n   \n  \n   /*\n\tfunction makeCounter() {\n        var currentCount = 1;\n        \n        return function() {\n           return currentCount++;\n\n        };\n     }\n\n     */\n\t \n  \n  \n\t\n\t\n\t//function changeBGColor() {\n\t\t\n\t\t//var counter = makeCounter();\n\t\t//var c = counter();\n\t\t//alert(c);\n\t\t//alert( counter() ); // 1\n\n        var counterX = this.state.wallPapperCount;\n\t\t\n\t\tif((counterX + 1) === wallURL.length){  //if counter == array length , {+1 as counter starts with 0}\n\t\t\t//counterX = 0;\n\t\t\t this.setState({ wallPapperCount: 0}); //alert('Nulled');\n\t\t} else { \n\t\t    //(makeCounter())();//\n\t\t    this.setState(prevState => ({ wallPapperCount: prevState.wallPapperCount + 1 }));\n            //alert(\"state \" + this.state.wallPapperCount);\n\n\t\t\t\n\t\t\t//counterX++; \n\t\t\t//alert(\"Core \" + counterX);\n\t\t}\n\t\t\n        var cols = document.getElementsByClassName('change-head-style');\n\t\t\n        for(var i = 0; i < cols.length; i++) {  \n\t\t    \n\t\t\t//alert(counterX); \n\t\t\t /* var shooter = function(self_i) { // функция shooter\n\t\t\t    alert('shooter  ' + self_i);\n\t          };\n\t\t\t */\n\t\t\t\t\n\t\t\t//checks if URL with image is not broaken\n\t\t\t  /*var img = new Image();        \n              try {\n                 img.src  = wallURL[counter];\n                 return true;\n              } catch(err) {\n                   return false; alert('broaken');\n              }*/ \n\t\t\t  \n\t\t\t  \n\t\t\t//\n\t\t\ttry{\n               cols[i].style.backgroundImage = 'url(' + wallURL[this.state.wallPapperCount] + ')';\n\t\t\t} catch(err) {\n\t\t\t\talert(err.message);\n\t\t\t}\n\t\t\t\n        }\n     //}\n\t \n\t //alert(\"end\");\n\t \n\t \n\t \n\t// changeBGColor(); \n   \n   \n}\t\n\n//export default TopSectionButtons;","import React, { Component } from 'react';\nimport logo from './logo.svg';\n//import logo from './images/logox.jpg';\nimport './css/App.css';\nimport TextAreaX from './MyComponents/TextArea/TextArea';\nimport ErrorLayout from './MyComponents/Error/ErrorLayout';  //display error gif\nimport TechnicalInfo from './MyComponents/TechnicalInfoComponent/TechnicalInfo';  //displays info instead of alert\nimport TopSectionButtons from './MyComponents/TopSectionButtons/TopSectionButtons';  //displays buttons (change theme, test mode)\n\n\n\n/*import Header from './MyComponents/Header/Header';\nimport ButtonsLayout from './MyComponents/Buttons/ButtonsLayout';\nimport Instructions from './MyComponents/Instructions/Instructions';\nimport Results from './MyComponents/Result/Results';\nimport TextAreaX from './MyComponents/TextArea/TextArea';\nimport LiftedFrom_Component from './MyComponents/LiftUpComponent/LiftedFrom_Component';\n\n\n*/\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\t\t\n\t\tthis.state = {\n\t\t\tphoneNumber : \"Phone number: I am set manually in state in parent <App/>\", //this state is to display in <TechnicalInfo/> only, when sms is sent, value is taken from <TerxAreaX/> state => phoneNumberChild\n\t\t\tsmsText : \"Sms text:I am set manually in state in parent <App/>\",          //this state is to display in <TechnicalInfo/> only, when sms is sent, value is taken from <TerxAreaX/> state => smsTextChild\n\t\t    ifTestMode : true, //true by default, it is uplifted from <TopSectionButtons/> and passed to <TerxAreaX/>, IT IS USED IN <TerxAreaX/> when sendinf Sms //used to switch between test/prod mode, when in test mode, Api uses on server side TextBelt test key {\"textbelt_test\"}\n\t\t\ttechInfo:['some'], //just tech info, instead of alert\n\t\t\t\n\t\t\t//arg1: [],  //this state will hold lifted up var(onClick) or  array with coordinates\n\t\t    //finalCoords:[], //not used???\n\t\t\t//techInfoState:[], //state to store alert info\n\t\t\t//baseState : []\n        };\n\t   \n\t    //var liftPhoneNumberHandler = this.liftPhoneNumberHandler.bind(this); //gets state (phone number) from child <Textarea/> and sets as state here, in this class\n\t    //var liftSmsTextHandler = this.liftSmsTextHandler.bind(this); //gets state (sms text) from child <Textarea/> and sets as state here, in this class\n\t   \t//var liftTestModeStatustHandler = this.liftTestModeStatustHandler.bind(this); //gets state (if Test button is ON) from child <TopSectionButtons/> and sets as state here, in this class\n\n\t   \n\t   /*\n        var handleToUpdate = this.handleToUpdate.bind(this);  //for catching lifted state from LiftedFrom_Component\n\t\tvar liftFinalCoordsHandler = this.liftFinalCoordsHandler.bind(this);  //for catching lifted state from TextArea Comp\n\t\tvar clearStateHandler = this.clearStateHandler.bind(this);  //cathes lifted state from Buttons layout - //for lifting and clearing the state up in the parent\n\t\tvar techInfoHandler = this.techInfoHandler.bind(this);  //for lifting techInfo(instead of alerts)the state up in the parent\n        var reset_techInfo_State = this.reset_techInfo_State.bind(this);  //   \n        */\n        // preserve the initial state in a new object\n        this.baseState = []; //this.state.arg1; \t\t\n    } //end constructor\n\n\t/*\n\tcomponentWillMount() {\n        this.initialState = this.state\n    } */\n\t\n\t\n\t\n\t\n\t//method for catching lifted state from TextArea.js Component, triggered manually by {this.props.liftPhoneNumberHandler(this.state.phoneNumberChild);} in TerxArea.js\n    liftPhoneNumberHandler(somePhoneNumber){\n           this.setState({phoneNumber:somePhoneNumber});\n    }\n\t\n\t\n\t//method for catching lifted state from TextArea.js Component, triggered manually by { this.props.liftSmsTextHandler(this.state.smsTextChild);} in TerxArea.js\n    liftSmsTextHandler(someSmsText){\n            //alert('TextArea value data lifted from Child(TextArea.js) to Parent(App.js): ' + someArgCoords);\n\t\t\t//instead of alert, it calls parent method from child {this.props. + method}-> passing/uplifting alert info to method techInfoHandler described in Parent App.js\n\t       //this.techInfoHandler('TextArea value data lifted from Child(TextArea.js) to Parent(App.js): ' + someArgCoords); \n\t\t\t\n           this.setState({smsText:someSmsText});\n    }\n\t\n\t\n\t\n\t//method for catching lifted state from TopSectionButtons.js Component, triggered manually by {this.props.liftTestModeStatustHandler(this.state.ifTestMode);} in TopSectionButtons.js\n    liftTestModeStatustHandler(someTestModeBoolValue){\n           this.setState({ifTestMode:someTestModeBoolValue});\n    }\n\t\n\t//method for catching lifted state from TextArea.js (from  functions_injected/sendSmsMessage.js), triggered manually by {liftTechAlertsInfoHandler(someAlert);} in sendSmsMessage.js\n\tliftTechAlertsInfoHandler(someNewAlertValue){\n\t\tthis.setState(prevState => ({\n            techInfo: [...prevState.techInfo, someNewAlertValue]\n        }));\n\t}\n\t\n\t\n\t/*\n\t//methodfor catching lifted state from LiftedFrom_Component, triggerd onClick\n    handleToUpdate(someArg){\n            //alert('We pass argument from Child to Parent (now we are in <App/>): ' + someArg);\n            this.setState({arg1:someArg});\n    }\n\t\n\t\n\t//method for catching lifted state from TextArea.js Component, triggered manually by {this.props.liftFinalCoordsHandler(this.state.coordinateArray[0])} in TerxArea.js\n    liftFinalCoordsHandler(someArgCoords){\n            //alert('TextArea value data lifted from Child(TextArea.js) to Parent(App.js): ' + someArgCoords);\n\t\t\t//instead of alert, it calls parent method from child {this.props. + method}-> passing/uplifting alert info to method techInfoHandler described in Parent App.js\n\t       //this.techInfoHandler('TextArea value data lifted from Child(TextArea.js) to Parent(App.js): ' + someArgCoords); \n\t\t\t\n           this.setState({arg1:someArgCoords});\n    }\n\t\n\t//WORKING!!!!!!! - clearing/reseting state arg1 onClick button=\"Clear\"\n\tclearStateHandler(vv){\n            //alert('Cleared' + vv);\n            this.setState({arg1:''});\n    }\n\t\n\t\n\t//for lifting techInfo(instead of alerts)the state up in the parent\n\ttechInfoHandler(techAlert){\n\t\tconst alertTempArray = this.state.techInfoState; //getting state to temp array\n\t\talertTempArray.push(techAlert); //adds to array in this way: addressArray = [[arrayX2]];\n\t\tthis.setState({ //sets new value to state\n           techInfoState: alertTempArray\n       }); \n\t}\n\t\n\n\t\n\t//for clearing state techInfoState on every Button click\n\treset_techInfo_State(some){\n\t\t//this.setState(this.initialState);\n\t\t//alert(\"resetting\");\n\t\t//alert(\"this.baseState-> \" + this.baseState );\n\t\tthis.setState({ //sets new value to state //setState is an async function\n           techInfoState: this.state.baseState\n       }); \n\t}\n*/\n\t\n\t\n  render() {\n\t  var liftPhoneNumberHandler  =   this.liftPhoneNumberHandler;          //for catching lifted state from TextArea.js Component\n\t  var liftSmsTextHandler  =   this.liftSmsTextHandler;                  //for catching lifted state from TextArea.js Component\n\t  var liftTestModeStatustHandler  =   this.liftTestModeStatustHandler; //for catching lifted state from TopSectionButtons.js Component\n\t  var liftTechAlertsInfoHandler = this.liftTechAlertsInfoHandler;      //for catching lifted state from TextArea.js (from  functions_injected/sendSmsMessage.js)\n\t  \n\t /* var handleToUpdate =  this.handleToUpdate; //for catching lifted state from LiftedFrom_Component\n\t  var liftFinalCoordsHandler  =   this.liftFinalCoordsHandler; //for catching lifted state from TextArea.js Component\n\t  var clearStateHandler =  this.clearStateHandler ; //for lifting and clearing the state up in the parent\n      var techInfoHandler = this.techInfoHandler;  //for lifting techInfo(instead of alerts)the state up in the parent\n\t  var reset_techInfo_State = this.reset_techInfo_State;  \n\t  */\n    return (\n\t \n\t    <div className=\"wrapper grey\">\n            <div className=\"container\"> {/*<!-- container-full -->*/}\n\t\t\t\n\t            <div className=\"row row1\">\n\t\t\t\t\n                    <div className=\"col-sm-12 col-xs-12 divX App change-head-style\"> \n\t\t                <h4 className=\"header-x shadow-xx\"> {this.props.name} {/* props are set in index.js */} <i className=\"fa fa-envelope-o\" ></i>\n\t\t\t\t\t\t    <img src={logo}  className=\"react-logo-static\" alt=\"logo\" />\n\t\t\t\t\t\t</h4>\n\t\t\t            \n\t\t\t\t\t\t<TextAreaX ifTestModeData={this.state.ifTestMode } liftPhoneNumberHandler = {liftPhoneNumberHandler.bind(this)}  liftSmsTextHandler = {liftSmsTextHandler.bind(this)} liftTechAlertsInfoHandler = {liftTechAlertsInfoHandler.bind(this)} />\n\t\t            </div>\n\t\t\t\t\t\n\t\t\t\t   <TechnicalInfo phoneNumberData={this.state.phoneNumber}  smsTextData={this.state.smsText} ifTestModeData={this.state.ifTestMode} techInfoDate={this.state.techInfo} /> { /* displays info instead of alert */ }\n\n\t\t\t\t\t\n\t\t\t    </div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<ErrorLayout/> { /* error gif animation component */ }  \n\t\t\t<TopSectionButtons liftTestModeStatustHandler = {liftTestModeStatustHandler.bind(this)} /> { /* displays buttons (change theme, test mode button)*/ } \n\t\t</div>\n\t\n\t\n\t  \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App  name=\"Sms Api React JS\"/>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister(); \n"],"sourceRoot":""}